```{r}
#| label: setup

# Load necessary packages.

library(tidycensus)
library(tidyverse)
library(hdatools)
library(ggiraph)
library(scales)
library(patchwork)
library(ggtext)
library(kableExtra)
library(leaflet)

# Use data from the VZA to summarize the number of districts involved, number of zoning ordinance pages read, and other interesting metrics.

```

```{r}
#| label: fig-rva-map
#| fig-cap: "PlanRVA"

# The following is a map of PlanRVA jurisdictions.

region <- read_rds("data/planrva/rds/rva_region.rds") 

# Map in leaflet.

leaflet(region) |> 
  addProviderTiles(providers$CartoDB.Positron) |> # Add basemap
  addPolygons(fillColor = "#011E41", # Set polygon fill color.
              weight = 1, # Set polygon outline weight.
              color = "white", # Set polygon outline color.
              fillOpacity = 0.8, # Set polygon fill color transparency.
              popup = region$Jurisdiction) # Set pop-up to jurisdiction name.

```

```{r}

summary_tbl <- read_csv("data/planrva/csv/rva_summary.csv") |> 
  kbl(col.names = c("Jurisdiction", "Last Comprehensive Rewrite", "Number of Pages", "Number of base and overlay districts"), align = "lccc") |> 
  kable_styling(bootstrap_options = c("striped", "condensed"))

summary_tbl

```

```{r}
#| label: fig-bps
#| fig-cap: "Total new residential building permits issued from 2000 to 2022"

# Create a visualization that shows where housing is being built. Where is more diverse housing being built? Where is single-family housing being built the most? How does that compare to population growth in those localities?

bps <- read_rds("data/planrva/rds/rva_bps.rds") |> # Load in Building Permits Survey data.
  mutate(type = case_when( # Group "Missing Middle" housing together.
    type == "2-units" ~ "2-4 units",
    type == "3-4 units" ~ "2-4 units",
    TRUE ~ type
  )) |> 
  group_by(name_long, year, type) |> # Aggregate to locality and housing type.
  summarise(units = sum(units)) |> 
  group_by(name_long) |> # Group by locality.
  mutate(total = sum(units)) # Calculate the total number of new permits for entire time period.


# Summarize the percentage of units developed by type for the narrative.

bps_summary <- bps |> 
  group_by(type) |> # Aggregate by housing type.
  summarise(units = sum(units)) |> 
  mutate(pct = units/sum(units)) # Calculate the percentage of type of units for the region.


subtitle_text <- "Few <span style = 'color:#40C0C0'><b>2-4 unit housing</span> has been built between 2000 to 2023"
  
bps_plot <- ggplot(bps,
       aes(x = year,
           y = units,
           fill = type,
           data_id = units,
           tooltip = number_format(big.mark =",")(units))) + 
  geom_col_interactive(position = "stack") +
  facet_wrap(~type) +
  theme_hfv(base_size = 10) + 
  scale_fill_hfv() +
  scale_y_continuous(labels = number_format(big.mark = ",", style_positive = "plus")) +
  labs(title = "Total new residential building permits issued in the PlanRVA region",
       subtitle = subtitle_text,
       caption = "**Source:** U.S. Census Bureau. Building Permits Survey.") + 
  theme(panel.grid.major.y = element_line(color = "white"),
        panel.grid.major.x = element_line(color = "#f5f5f5",size = 0.1),
        axis.text.x = element_text(angle = 90)) +
  plot_annotation(
    theme = theme(
    plot.subtitle = element_markdown(
       margin = margin(b = 0.4, unit = 'cm'),
        size = 11.5
    )))

# girafe(ggobj = bps_plot,
#        height_svg = 4)

bps_plot

```
```{r}
#| label: fig-bps
#| fig-cap: "Total new 2+ residential building permits issued from 2000 to 2022"

# Create a visualization that shows where 2+ housing is being built. Where is more diverse housing being built? 

density <- c("Hanover", "Henrico", "Chesterfield", "Richmond")

bps <- read_rds("data/planrva/rds/rva_bps.rds") |> # Load in Building Permits Survey data.
  mutate(type = case_when( # Group "Missing Middle" housing together.
    type == "2-units" ~ "2-4 units",
    type == "3-4 units" ~ "2-4 units",
    TRUE ~ type
  )) |> 
  group_by(name_long, year, type) |> # Aggregate to locality and housing type.
  summarise(units = sum(units)) |> 
  group_by(name_long) |> # Group by locality.
  mutate(total = sum(units)) |> # Calculate the total number of new permits for entire time period.
  filter(type != "1-unit") |> 
  filter(name_long %in% density)


subtitle_text <- "Few <span style = 'color:#40C0C0'><b>2-4 unit housing</span> has been built between 2000 to 2023"
  
bps_plot <- ggplot(bps,
       aes(x = reorder(name_long, units),
           y = units,
           fill = type,
           data_id = units,
           tooltip = number_format(big.mark =",")(units))) + 
  geom_col_interactive(position = "stack") +
  facet_wrap(~type) +
  theme_hfv(base_size = 10) + 
  scale_fill_hfv() +
  scale_y_continuous(labels = number_format(big.mark = ",", style_positive = "plus")) +
  labs(title = "Total new residential building permits issued in the PlanRVA region",
       subtitle = subtitle_text,
       caption = "**Source:** U.S. Census Bureau. Building Permits Survey.") + 
  theme(panel.grid.major.y = element_line(color = "white"),
        panel.grid.major.x = element_line(color = "#f5f5f5",size = 0.1),
        axis.text.x = element_text(angle = 90)) +
  plot_annotation(
    theme = theme(
    plot.subtitle = element_markdown(
       margin = margin(b = 0.4, unit = 'cm'),
        size = 11.5
    )))

# girafe(ggobj = bps_plot,
#        height_svg = 4)

bps_plot

```

```{r}
#| label: fig-bps
#| fig-cap: "Total new 2+ residential building permits issued from 2000 to 2022"

# Create a visualization that shows where 2+ housing is being built. Where is more diverse housing being built? 

density <- c("Hanover", "Henrico", "Chesterfield", "Richmond")

bps <- read_rds("data/planrva/rds/rva_bps.rds") |> # Load in Building Permits Survey data.
  mutate(type = case_when( # Group "Missing Middle" housing together.
    type == "2-units" ~ "2-4 units",
    type == "3-4 units" ~ "2-4 units",
    TRUE ~ type
  )) |> 
  group_by(name_long, year, type) |> # Aggregate to locality and housing type.
  summarise(units = sum(units)) |> 
  group_by(name_long) |> # Group by locality.
  mutate(total = sum(units)) |> # Calculate the total number of new permits for entire time period.
  filter(type == "1-unit") 


# subtitle_text <- "Few <span style = 'color:#40C0C0'><b>2-4 unit housing</span> has been built between 2000 to 2023"
  
bps_plot <- ggplot(bps,
       aes(x = reorder(name_long, units),
           y = units,
           fill = type,
           data_id = units,
           tooltip = number_format(big.mark =",")(units))) + 
  geom_col_interactive(position = "stack") +
  theme_hfv(base_size = 10) + 
  scale_fill_hfv() +
  scale_y_continuous(labels = number_format(big.mark = ",", style_positive = "plus")) +
  labs(title = "Total new 1-unit residential building permits issued in the PlanRVA region",
       caption = "**Source:** U.S. Census Bureau. Building Permits Survey.") + 
  theme(panel.grid.major.y = element_line(color = "white"),
        panel.grid.major.x = element_line(color = "#f5f5f5",size = 0.1),
        axis.text.x = element_text(angle = 90)) +
  plot_annotation(
    theme = theme(
    plot.subtitle = element_markdown(
       margin = margin(b = 0.4, unit = 'cm'),
        size = 11.5
    )))

# girafe(ggobj = bps_plot,
#        height_svg = 4)

bps_plot

```

```{r}
#| label: fig-pct-renter
#| fig-cap: "Percent of renter households in the PlanRVA region"

tenure <- read_rds("data/planrva/rds/b25003.rds") |> 
  filter(year == 2010 | year == 2022) |> 
  filter(tenure == "Renter") |> 
  mutate(year = as.character(year)) 

subtitle_text <- "In <span style = 'color:#011E41'><b>2010</b></span> and <span style = 'color:#40C0C0'><b>2022</span>"

# tenure_plot <- 
  
ggplot(tenure,
       aes(x = reorder(NAME, pct),
           y = pct,
           color = year)) +
  geom_line(size = 1, color = "grey") +
  geom_point_interactive(aes(color = year,
                             data_id = pct,
                             tooltip = percent_format(accuracy = 1)(pct)), 
                         size = 2) +
  coord_flip() +
  theme_hfv() +
  scale_y_continuous(labels = percent_format()) +
  labs(title = "Percent of renter households in Hampton Roads",
       subtitle = subtitle_text,
       caption = "**Source:** U.S. Census Bureau, ACS, 5-Year Estimates, Table B25003.") +
  scale_color_hfv() +
  plot_annotation(
    theme = theme(
    plot.subtitle = element_markdown(
       margin = margin(b = 0.4, unit = 'cm'),
        size = 11.5
    ))) + 
  theme(panel.grid.major.y = element_line(color = "white"),
        panel.grid.major.x = element_line(color = "#dadada",size = 0.1))

girafe(ggobj = tenure_plot,
       height_svg = 4)


```
```{r}
#| label: fig-pct-homeowner
#| fig-cap: "Homeownership in the PlanRVA region"

tenure <- read_rds("data/planrva/rds/b25003.rds") |>
  group_by(year, NAME, tenure) |> 
  summarise(estimate = sum(estimate)) |> 
  ungroup() |> 
  group_by(year, NAME) |> 
  mutate(total = sum(estimate)) |> 
  mutate(pct = estimate/total) |> 
  filter(tenure == "Homeowner") |> 
  filter(year == 2010 | year == 2022) |> 
  mutate(year = as.character(year)) 


subtitle_text <- "In <span style = 'color:#011E41'><b>2010</b></span> and <span style = 'color:#40C0C0'><b>2022</span>"

# tenure_plot <- 
  
ggplot(tenure,
       aes(x = reorder(NAME, pct),
           y = pct,
           color = year)) +
  geom_line(size = 1, color = "grey") +
  geom_point_interactive(aes(color = year,
                             data_id = pct,
                             tooltip = percent_format(accuracy = 1)(pct)), 
                         size = 2) +
  coord_flip() +
  theme_hfv() +
  scale_y_continuous(labels = percent_format(), limits = c(.35, 1)) +
  labs(title = "Homeownership rate in the PlanRVA region",
       subtitle = subtitle_text,
       caption = "**Source:** U.S. Census Bureau, ACS, 5-Year Estimates, Table B25003.") +
  scale_color_hfv() +
  plot_annotation(
    theme = theme(
    plot.subtitle = element_markdown(
       margin = margin(b = 0.4, unit = 'cm'),
        size = 11.5
    ))) + 
  theme(panel.grid.major.y = element_line(color = "white"),
        panel.grid.major.x = element_line(color = "#dadada",size = 0.1))

  
girafe(ggobj = tenure_plot,
       height_svg = 4)

```
```{r}
#| label: fig-rva-price
#| fig-cap: "Median home sales price in Hampton Roads"

# What have home prices been like?

# How to add arrows indicating direction on line segments??

hr_var_price <- read_rds("data/plan/hr_var.rds") |> 
  select(geography, period, name, adj_price) |> 
  mutate(year = substr(period, 1, 4)) |> 
  mutate(year = as.numeric(year)) |> 
  filter(period == "2023 Q2" | period == "2019 Q2") |> 
  mutate(period = as.character(period)) |> 
  select(geography, name, adj_price, period) |> 
  pivot_wider(names_from = period, 
              values_from = adj_price) |> 
  mutate(latest = `2023 Q2`) |> 
  pivot_longer(3:4,
               names_to = "period",
               values_to = "med_price") |> 
  mutate(name = case_when(
    name == "Virginia Beach-Norfolk-Newport News MSA" ~ "VB-Norfolk-NN MSA",
    TRUE ~ name
  )) |> 
  mutate(name = str_remove(name, " City"))  |> 
  mutate(name = case_when(
    name == "James County" ~ "James City County",
    TRUE ~ name
  ))
  
subtitle_text <- "In <span style = 'color:#011E41'><b>Q2 2019</b></span> and <span style = 'color:#40C0C0'><b>Q2 2023</span>"


price_plot <- ggplot(hr_var_price,
       aes(x = reorder(name, latest),
           y = med_price,
           color  = period)) +
  theme_hfv() +
  geom_line(linewidth = 1, color = "grey") +
  geom_point_interactive(aes(
           data_id = med_price,
           tooltip = dollar_format()(med_price))) +
  geom_text(data = subset(hr_var_price, 
                          name %in% c("James City County",  "VB-Norfolk-NN MSA", "Portsmouth")),
            aes(label = dollar(med_price),
                hjust = ifelse(period == "2023 Q2", -0.25, 1.25)), 
            size = 3) +
  coord_flip() +
  labs(title = "Median home sales price in Hampton Roads",
       subtitle = subtitle_text,
       caption = "**Source:** Virginia REALTORS, adjusted to Q2 2023 dollars.") +
  scale_y_continuous(labels = dollar_format(), limits = c(100000, 500000)) +
  scale_color_hfv() +
  plot_annotation(
    theme = theme(
    plot.subtitle = element_markdown(
       margin = margin(b = 0.4, unit = 'cm'),
        size = 11.5
    ))) + 
  theme(panel.grid.major.y = element_line(color = "white"),
        panel.grid.major.x = element_line(color = "#dadada",size = 0.2))
  
girafe(ggobj = price_plot,
       height_svg = 4)

```

```{r}
#| label: fig-housing-type
#| fig-cap: "Share of Land Dedicated to Residential and Nonresidential Uses"

# Create a bar chart that shows the percentage of zoned in each locality by type (i.e. primarily residential, mixed with residential, nonresidential)

type <- read_rds("data/planrva/rds/rva_vza_nogeo.rds") |> 
  select(jurisdiction, type, acres) 


type_summary <- type |> 
  group_by(jurisdiction, type) |> 
  summarise(acres = sum(acres)) |> 
  group_by(jurisdiction) |> 
  mutate(pct = acres/sum(acres)) 

rva_summary <- type |> 
  group_by(type) |> 
  summarise(acres = sum(acres)) |> 
  mutate(pct = acres/sum(acres)) 

subtitle_text <- "<span style='color:#8B85CA'><b>Primarily Residential</span></b>, <span style='color:#40C0C0'><b>Mixed with Residential</span></b>, and <span style='color:#011E41'><b>Nonresidential</span></b>"


type_plot <- ggplot(type_summary,
       aes(x = fct_reorder2(jurisdiction, type, pct),
           y = pct,
           fill = factor(type, levels = c("Nonresidential", "Mixed with Residential", "Primarily Residential")),
           data_id = pct,
           tooltip = percent_format(accuracy = 0.1)(pct))) +
  geom_col_interactive(position = "stack") +
  coord_flip() +
  theme_hfv() +
  scale_fill_hfv() +
  labs(subtitle = subtitle_text
       # caption = "**Source:** Mercatus Center at George Mason University & HousingForward Virginia, Virginia Zoning Atlas."
       ) +
  scale_y_continuous(labels = percent_format(), expand = expansion(mult = c(0, 0.01))) +
  plot_annotation(
    theme = theme(
    plot.subtitle = element_markdown(
       margin = margin(b = 0.4, unit = 'cm'),
        size = 11.5
    )))


girafe(ggobj = type_plot,
       height_svg = 4)

type_plot

# write_csv(nova_summary, "data/nova/csv/nova_ztype_region.csv")
# write_csv(nova_type_summary, "data/nova/csv/nova_ztype.csv")



```




```{r}
#| label: fig-sfd-bar
#| fig-cap: "Percent of Developable Residential or Mixed with Residential Land Where Only Detached Single-Family Housing is Allowed By-Right"

# Create a bar char that shows the percentage of zoned in each locality that is dedicated to single-family detached only housing.

sfd <- read_rds("data/planrva/rds/rva_vza_nogeo.rds") |> # Read in the data.
  select(jurisdiction, abbrvname, type, sfd, acres) |> 
  filter(type == "Mixed with Residential" | type == "Primarily Residential") |> # Filter for only land that allows for housing?
  mutate(acres = as.numeric(acres)) |> 
  group_by(jurisdiction, sfd) |> 
  summarise(acres = sum(acres)) |> 
  ungroup() |> 
  group_by(jurisdiction) |> 
  mutate(total = sum(acres)) |> 
  mutate(pct = acres/total) 


# Total acres is 1151289
# 
sfd_summary <- sfd |> 
  group_by(sfd) |> 
  summarise(acres = sum(acres)) |> 
  mutate(pct_area = acres/1151289)

sfd_locality <- sfd |> 
  ungroup() |> 
  filter(sfd == "t") |> 
  select(jurisdiction, pct) |> 
  add_row(jurisdiction = "Charles City", pct = 0) |> 
  add_row(jurisdiction = "Chesterfield", pct = 0 )


sfd_explore <- read_rds("data/planrva/rds/rva_vza_nogeo.rds") |> # Read in the data.
  select(jurisdiction, abbrvname, type, sfd, acres, family1_treatment) |> 
  filter(type == "Mixed with Residential" | type == "Primarily Residential") |> # Select necessary data fields.
  mutate(acres = as.numeric(acres)) |> 
  group_by(jurisdiction, sfd, family1_treatment) |> 
  summarise(acres = sum(acres)) |> 
  ungroup() |> 
  group_by(jurisdiction) |> 
  mutate(total = sum(acres)) |> 
  mutate(pct = acres/total) 



ggplot(sfd_locality,
       aes(x = reorder(jurisdiction, pct),
           y = pct,
           fill = pct)) +
  geom_col(position = "dodge") +
  geom_col_interactive(position = "dodge") +
  geom_text(aes(label = percent(pct, 1), color = pct),
    hjust = -0.2) +
  theme_hfv() +
  coord_flip() +
  scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +
  scale_fill_gradientn(colours = c("#ADDCB1", "#46A88F", "#207A88", "#0F1A4E")) + # Use custom HFV gradient.
  scale_color_gradientn(colours = c("#ADDCB1", "#46A88F", "#207A88", "#0F1A4E")) + # Use custom HFV gradient.
  # labs(caption = "**Source:** Mercatus Center at George Mason University & HousingForward Virginia, Virginia Zoning Atlas.") +
  theme(axis.text.x = element_blank())


# write_csv(nova_sfd, "data/nova/csv/nova_sfd.csv")
# write_csv(nova_sfd_summary, "data/nova/csv/nova_sfd_region.csv")
# 
# 


```

```{r}
#| label: fig-sfd-bar
#| fig-cap: "Percent of Developable Residential or Mixed with Residential Land Where Only Detached Single-Family Housing is Allowed By-Right"

# Create a bar char that shows the percentage of zoned in each locality that is dedicated to single-family detached only housing.


treatment <- read_rds("data/planrva/rds/rva_vza_nogeo.rds") |> # Read in the data.
  select(jurisdiction, abbrvname, type, family1_treatment, family2_treatment,
         family3_treatment, family4_treatment, acres) |> 
  mutate(acres = as.numeric(acres)) |> 
  group_by(jurisdiction) |> 
  mutate(total_acres = sum(acres)) 

|> 
  ungroup() |> 
  group_by(jurisdiction) |> 
  mutate(total = sum(acres)) |> 
  mutate(pct = acres/total) 

# Total acres is 1151289
# 
sfd_summary <- sfd |> 
  group_by(sfd) |> 
  summarise(acres = sum(acres)) |> 
  mutate(pct_area = acres/1151289)

sfd_locality <- sfd |> 
  ungroup() |> 
  filter(sfd == "t")
  
  select(jurisdiction, pct) |> 
  add_row(jurisdiction = "Charles City", pct = 0) |> 
  add_row(jurisdiction = "Chesterfield", pct = 0 )



ggplot(sfd_locality,
       aes(x = reorder(jurisdiction, pct),
           y = pct,
           fill = pct)) +
  geom_col(position = "dodge") +
  geom_col_interactive(position = "dodge") +
  geom_text(aes(label = percent(pct, 1), color = pct),
    hjust = -0.2) +
  theme_hfv() +
  coord_flip() +
  scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +
  scale_fill_gradientn(colours = c("#ADDCB1", "#46A88F", "#207A88", "#0F1A4E")) + # Use custom HFV gradient.
  scale_color_gradientn(colours = c("#ADDCB1", "#46A88F", "#207A88", "#0F1A4E")) + # Use custom HFV gradient.
  # labs(caption = "**Source:** Mercatus Center at George Mason University & HousingForward Virginia, Virginia Zoning Atlas.") +
  theme(axis.text.x = element_blank())


# write_csv(nova_sfd, "data/nova/csv/nova_sfd.csv")
# write_csv(nova_sfd_summary, "data/nova/csv/nova_sfd_region.csv")


```



```{r}
#| label: tbl-hearing
#| tbl-cap: "Percent of developable land that forces housing through a public hearing process"

# Create a table that shows the percentage of land that allows for each type of treatment by locality
# https://frontierinstitute.org/reports/the-montana-zoning-atlas-2-0/ use this as an example 

hearing_tbl <- read_rds("data/planrva/rds/rva_vza_nogeo.rds") |> 
  select(jurisdiction, abbrvname, overlay, 6:9, acres) |> 
  filter(overlay == 0) |> 
  group_by(jurisdiction) |> 
  mutate(total_area = sum(acres)) 

|> 
  mutate(family1_pct = case_when(
    family1_treatment == "hearing" ~ acres/total_area,
    TRUE ~ 0
  ))|> 
  mutate(family2_pct = case_when(
    family2_treatment == "hearing" ~ acres/total_area,
    TRUE ~ 0 
  )) |> 
  mutate(family3_pct = case_when(
    family3_treatment == "hearing" ~ acres/total_area,
    TRUE ~ 0 
  )) |> 
  mutate(family4_pct = case_when(
    family4_treatment == "hearing" ~ acres/total_area,
    TRUE ~ 0 
  )) |> 
  group_by(jurisdiction) |> 
  summarise(family1_hearing = percent(sum(family1_pct)),
            family2_hearing = percent(sum(family2_pct)),
            family3_hearing = percent(sum(family3_pct)),
            family4_hearing = percent(sum(family4_pct))
            ) 

hearing_tbl |>
  kable(col.names = c("Jurisdiction", "Single-family", "2-family", "3-family", "4+-family"), 
        align = "lcccc") |> 
  kable_styling(bootstrap_options = c("striped", "condensed"))

```


```{r}
#| label: tbl-hearing-3
#| tbl-cap: "Percent of developable land that forces housing through a public hearing process"

# Create a table that shows the percentage of land that allows for each type of treatment by locality
# https://frontierinstitute.org/reports/the-montana-zoning-atlas-2-0/ use this as an example 

# treatment_tbl <- read_rds("data/planrva/rds/rva_vza_nogeo.rds") |> 
#   select(jurisdiction, abbrvname, overlay, 6:9, acres) |> 
#   filter(overlay == 0) |> 
#   group_by(jurisdiction) |> 
#   mutate(total_area = sum(acres)) |> 
#   mutate(family1_pct = case_when(
#     family1_treatment == "prohibited" ~ acres/total_area,
#     TRUE ~ 0
#   ))|> 
#   mutate(family2_pct = case_when(
#     family2_treatment == "prohibited" ~ acres/total_area,
#     TRUE ~ 0 
#   )) |> 
#   mutate(family3_pct = case_when(
#     family3_treatment == "prohibited" ~ acres/total_area,
#     TRUE ~ 0 
#   )) |> 
#   mutate(family4_pct = case_when(
#     family4_treatment == "prohibited" ~ acres/total_area,
#     TRUE ~ 0 
#   )) |> 
#   group_by(jurisdiction) |>
#   mutate(family1_prohibited = (sum(family1_pct)),
#             family2_prohibited = (sum(family2_pct)),
#             family3_prohibited = (sum(family3_pct)),
#             family4_prohibited = (sum(family4_pct))
#             ) |> 
#   mutate(family1_pct = case_when(
#     family1_treatment == "hearing" ~ acres/total_area,
#     TRUE ~ 0
#   ))|> 
#   mutate(family2_pct = case_when(
#     family2_treatment == "hearing" ~ acres/total_area,
#     TRUE ~ 0 
#   )) |> 
#   mutate(family3_pct = case_when(
#     family3_treatment == "hearing" ~ acres/total_area,
#     TRUE ~ 0 
#   )) |> 
#   mutate(family4_pct = case_when(
#     family4_treatment == "hearing" ~ acres/total_area,
#     TRUE ~ 0 
#   )) |> 
#   group_by(jurisdiction) |> 
#   mutate(family1_hearing = (sum(family1_pct)),
#             family2_hearing = (sum(family2_pct)),
#             family3_hearing = (sum(family3_pct)),
#             family4_hearing = (sum(family4_pct))
#             ) |> 
#     mutate(family1_pct = case_when(
#     family1_treatment == "allowed" ~ acres/total_area,
#     TRUE ~ 0
#   ))|> 
#   mutate(family2_pct = case_when(
#     family2_treatment == "allowed" ~ acres/total_area,
#     TRUE ~ 0 
#   )) |> 
#   mutate(family3_pct = case_when(
#     family3_treatment == "allowed" ~ acres/total_area,
#     TRUE ~ 0 
#   )) |> 
#   mutate(family4_pct = case_when(
#     family4_treatment == "allowed" ~ acres/total_area,
#     TRUE ~ 0 
#   )) |> 
#   group_by(jurisdiction) |> 
#   mutate(family1_byright = (sum(family1_pct)),
#             family2_byright = (sum(family2_pct)),
#             family3_byright = (sum(family3_pct)),
#             family4_byright = (sum(family4_pct))
#             ) |> 
#   select(jurisdiction, 14:25) |> 
#   distinct() |> 
#   pivot_longer(2:13,
#                names_to = "treatment",
#                values_to = "pct") |> 
#   separate(treatment, into = c("type", "treatment"), sep = "_") |> 
#   mutate(type = case_when(
#     type == "family1" ~ "Single-family", 
#     type == "family2" ~ "2-family",
#     type == "family3" ~ "3-family",
#     type == "family4" ~ "4+-family"
#   )) 
# 
# write_rds(treatment_tbl, "data/planrva/rds/treatment_tbl.rds")

treatment_tbl <- read_rds("data/planrva/rds/treatment_tbl.rds") |> 
  filter(jurisdiction == "Chesterfield" | jurisdiction == "Henrico" | jurisdiction == "Richmond (city)")

treatment_tbl$treatment <- factor(treatment_tbl$treatment, levels = c("prohibited", "hearing", "byright"))
x_axis_order <- c("Single-family", "2-family", "3-family", "4+-family")
treatment_tbl$type <- factor(treatment_tbl$type, levels = x_axis_order)

subtitle_text <- "Percent of developable land that allows for housing<span style='color:#40C0C0'><b>By-right</span></b>, <span style='color:#8B85CA'><b>through a public hearing</span></b>, or <span style='color:grey'><b>prohibits it</span></b>"


ggplot(treatment_tbl,
       aes(x = type,
           y = pct,
           fill = treatment)) +
  geom_col(position = "stack") +
  facet_grid(~jurisdiction) +
  scale_fill_manual(values = c("byright" = "#40C0C0", "hearing" = "#8B85CA", "prohibited" = "grey")) +
  theme_hfv() +
  theme(axis.text.x = element_text(angle = 90)) +
  scale_y_continuous(labels = label_percent()) +
  labs(title = "Treatment of housing types",
       subtitle = subtitle_text)



```

```{r}
#| label: tbl-hearing-4
#| tbl-cap: "Percent of developable land that forces housing through a public hearing process"

treatment_tbl <- read_rds("data/planrva/rds/treatment_tbl.rds") |> 
  filter(jurisdiction == "Ashland" | jurisdiction == "Charles City" | jurisdiction == "Hanover" | jurisdiction == "New Kent"| jurisdiction == "Powhatan")

treatment_tbl$treatment <- factor(treatment_tbl$treatment, levels = c("prohibited", "hearing", "byright"))
x_axis_order <- c("Single-family", "2-family", "3-family", "4+-family")
treatment_tbl$type <- factor(treatment_tbl$type, levels = x_axis_order)

subtitle_text <- "Percent of developable land that allows for housing<span style='color:#40C0C0'><b>By-right</span></b>, <span style='color:#8B85CA'><b>through a public hearing</span></b>, or <span style='color:grey'><b>prohibits it</span></b>"

ggplot(treatment_tbl,
       aes(x = type,
           y = pct,
           fill = treatment)) +
  geom_col(position = "stack") +
  facet_grid(~jurisdiction) +
  scale_fill_manual(values = c("byright" = "#40C0C0", "hearing" = "#8B85CA", "prohibited" = "grey")) +
  theme_hfv() +
  theme(axis.text.x = element_text(angle = 90)) +
  scale_y_continuous(labels = label_percent()) +
  labs(title = "Treatment of housing types",
       subtitle = subtitle_text)

```




```{r}
#| label: fig-2plus
#| fig-cap: "Percent of developable land allowing for Missing Middle (2-6 units) housing by-right" 

# Create a bar graph that shows the total amount of zoned land that welcomes 2+ family housing by-right

byright <- read_rds("data/planrva/rds/rva_vza_nogeo.rds") |> 
  select(jurisdiction, abbrvname, overlay, 6:9, acres) |> # Select data fields.
  filter(overlay == 0) |> # Filter out overlay districts.
  group_by(jurisdiction) |> 
  mutate(total_area = sum(acres)) |> # Calculate the total area of zoned land.
  filter(family2_treatment == "allowed" & family3_treatment == "allowed" & family4_treatment == "allowed") |> 
  group_by(jurisdiction) |> 
  mutate(pct_2plus = acres/total_area) |> 
  group_by(jurisdiction) |> 
  summarise(pct_2plus = sum(pct_2plus)) |> 
  add_row(jurisdiction = "Chesterfield", pct_2plus = 0) |> 
  add_row(jurisdiction = "Goochland", pct_2plus = 0) 


byright_summary <- read_rds("data/planrva/rds/rva_vza_nogeo.rds") |> 
  select(jurisdiction, abbrvname, overlay, 6:9, acres) |> # Select data fields.
  filter(overlay == 0) |> # Filter out overlay districts.
  mutate(total_area = sum(acres)) |> # Calculate the total area of zoned land.
  filter(family2_treatment == "allowed" & family3_treatment == "allowed" & family4_treatment == "allowed") |> 
  mutate(total_2plus = sum(acres)) |> 
  mutate(pct2plus = total_2plus/total_area)

ggplot(byright,
       aes(x = reorder(jurisdiction, pct_2plus),
           y = pct_2plus,
           fill = pct_2plus)) +
  geom_col() +
  geom_text(aes(label = percent(pct_2plus, 1), color = pct_2plus),
    hjust = -0.2) +
  coord_flip() +
  theme_hfv() +
  # scale_fill_gradientn(colours = c("#ADDCB1", "#46A88F", "#207A88", "#0F1A4E")) + # Use custom HFV gradient.
  # scale_color_gradientn(colours = c("#ADDCB1", "#46A88F", "#207A88", "#0F1A4E")) + # Use custom HFV gradient.
  scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +
  labs(title = "Missing Middle Housing",
       caption = "**Source:** HousingForward Virginia, Virginia Zoning Atlas.")  +
  theme(axis.text.x = element_blank())


```

```{r}
#| label: fig-4plus
#| fig-cap: "Percent of developable land allowing for 4+ family housing by-right" 

# Create a bar graph that shows the total amount of zoned land that welcomes 2+ family housing by-right

byright <- read_rds("data/planrva/rds/rva_vza_nogeo.rds") |> 
  select(jurisdiction, abbrvname, overlay, 6:9, acres) |> # Select data fields.
  filter(overlay == 0) |> # Filter out overlay districts.
  group_by(jurisdiction) |> 
  mutate(total_area = sum(acres)) |> # Calculate the total area of zoned land.
  filter(family4_treatment == "allowed") |> 
  group_by(jurisdiction) |> 
  mutate(pct_4plus = acres/total_area) |> 
  group_by(jurisdiction) |> 
  summarise(pct_4plus = sum(pct_4plus)) |> 
  add_row(jurisdiction = "Goochland", pct_4plus = 0)

byright_summary <- read_rds("data/planrva/rds/rva_vza_nogeo.rds") |> 
  select(jurisdiction, abbrvname, overlay, 6:9, acres) |> # Select data fields.
  filter(overlay == 0) |> # Filter out overlay districts.
  mutate(total_area = sum(acres)) |> # Calculate the total area of zoned land.
  filter(family4_treatment == "allowed") |> 
  mutate(total_4plus = sum(acres)) |> 
  mutate(pct4plus = total_4plus/total_area) 

ggplot(byright,
       aes(x = reorder(jurisdiction, pct_4plus),
           y = pct_4plus,
           fill = pct_4plus)) +
  geom_col() +
  geom_text(aes(label = percent(pct_4plus, 1), color = pct_4plus),
    hjust = -0.2) +
  coord_flip() +
  theme_hfv() +
  scale_fill_gradientn(colours = c("#ADDCB1", "#46A88F", "#207A88", "#0F1A4E")) + # Use custom HFV gradient.
  scale_color_gradientn(colours = c("#ADDCB1", "#46A88F", "#207A88", "#0F1A4E")) + # Use custom HFV gradient.
  scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +
  labs(title = "Percent of developable land allowing for 4+ family housing by-right",
       caption = "**Source:** HousingForward Virginia, Virginia Zoning Atlas.")+
  theme(axis.text.x = element_blank())



```

```{r}
#| label: fig-hr-adus
#| fig-cap: "Percent of developable land that allows for ADUs by-right"

# Create a table that shows the percentage of land that allows for ADUs by-right
# https://frontierinstitute.org/reports/the-montana-zoning-atlas-2-0/ use this as an example 

# adu <- read_rds("data/planrva/rds/rva_vza_nogeo.rds") |> 
#   select(jurisdiction, abbrvname, overlay, accessory_treatment, acres) 
# 
# write_csv(adu, "data/planrva/csv/adu.csv")

adu <- read_csv("data/planrva/csv/adu.csv") |> 
  select(jurisdiction, abbrvname, adu_detached, adu_attached, area = acres)


type <- read_rds("data/planrva/rds/rva_vza_nogeo.rds") |> 
  select(jurisdiction, abbrvname, type, acres) |> 
  left_join(adu, by = c("jurisdiction", "abbrvname")) |> 
  pivot_longer(adu_detached:adu_attached,
               values_to = "treatment",
               names_to = "adutype") |> 
  ungroup() |> 
  group_by(jurisdiction, adutype, treatment) |> 
  summarise(adu_area = sum(area)) |> 
  ungroup() |> 
  group_by(jurisdiction, adutype) |> 
  mutate(total_area = sum(adu_area)) |> 
  mutate(adu_pct = adu_area/total_area) |> 
  mutate(adutype = case_when(
    adutype == "adu_detached" ~ "Detached ADU",
    adutype == "adu_attached" ~ "Attached ADU"
  ))

condition <- adu_detached$treatment %in% c("allowed", "hearing")

adu_detached <- type |> 
  filter(adutype == "Detached ADU") |> 
  group_by(jurisdiction) %>%
  mutate(
    total_pct = sum(adu_pct, na.rm = TRUE),
    allowed_hearing_pcts = sum(adu_pct[treatment %in% c("allowed", "hearing")], na.rm = TRUE),
    prohibited_pct = sum(adu_pct[treatment == "prohibited"], na.rm = TRUE)
  ) 

adu_attached <- type |> 
  filter(adutype == "Attached ADU") |> 
  group_by(jurisdiction) %>%
  mutate(
    total_pct = sum(adu_pct, na.rm = TRUE),
    allowed_hearing_pcts = sum(adu_pct[treatment %in% c("allowed", "hearing")], na.rm = TRUE),
    prohibited_pct = sum(adu_pct[treatment == "prohibited"], na.rm = TRUE)
  ) 

adu_detached$treatment <- factor(adu_detached$treatment, levels = c("prohibited", "hearing", "allowed"))
adu_attached$treatment <- factor(adu_attached$treatment, levels = c("prohibited", "hearing", "allowed"))


my_colors <- c("prohibited" = "#e2e4e3",
               "allowed" = "#40C0C0",
               "hearing" = "#8B85CA")


d_plot <- ggplot(adu_detached,
       aes(x = reorder(jurisdiction, allowed_hearing_pcts),
           y = adu_pct,
           fill = treatment)) +
  geom_col() +
  coord_flip() +
  theme_hfv()  +
  scale_y_continuous(labels = percent_format()) +
  scale_fill_manual(values = my_colors)  +
  labs(title = "Detached ADUs")

a_plot <- ggplot(adu_attached,
       aes(x = reorder(jurisdiction, allowed_hearing_pcts),
           y = adu_pct,
           fill = treatment)) +
  geom_col() +
  coord_flip() +
  theme_hfv()  +
  scale_y_continuous(labels = percent_format()) +
  theme(legend.position = "right") +
  scale_fill_manual(values = my_colors)   +
  labs(title = "Attached ADUs")

d_plot + a_plot


```


```{r}

transit_map <- read_rds("data/planrva/rds/transit_map.rds")
region <- read_rds("data/planrva/rds/rva_region.rds")


transit_map |> 
  addProviderTiles(providers$CartoDB.Positron) 

  


```

```{r}

# Determine how much total land allows for 4+ family housing either by-right or through
# public hearing.

type <- read_rds("data/planrva/rds/rva_vza_nogeo.rds") |> 
  select(jurisdiction, type, family4_treatment, acres) |> 
  filter(family4_treatment == 'allowed' | family4_treatment == 'hearing') |> 
  group_by(jurisdiction) |> 
  summarise(total_area = sum(acres)) |> 
  mutate(total_area = format(total_area, scientific = FALSE))

# Calculate how much developable land that allows for 4+ family housing within a
# quarter mile of transit stops allow for that housing by-right

transit_area <- geojson_sf("data/planrva/geo/byright4_w_qtr_mile.geojson") |> 
  st_drop_geometry() |> 
  group_by(jurisdiction) |> 
  summarise(area = sum(update_area)) |> 
  mutate(total_area = case_when(
    jurisdiction == "Richmond (city)" ~ 6061.756499,
    jurisdiction == "Chesterfield" ~ 138095.271176,
    jurisdiction == "Henrico" ~ 14065.528323)) |> 
  ungroup() |> 
  group_by(jurisdiction) |> 
  summarise(pct = area/total_area)

# Create a plot to show the percentage of land where you can build 4+ housing within
# quarter mile of transit stops.


ggplot(transit_area,
       aes(x = jurisdiction,
           y = pct)) +
  geom_col(fill = "#40C0C0") +
  theme_hfv(base_size = 10) +
  scale_y_continuous(labels = percent_format(), limits = c(0,1)) +
  labs(title = "Multifamily housing near transit",
       subtitle = "Percent of multifamily zoned land that permits it by-right")


```
