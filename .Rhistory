scale_y_continuous(label = label_comma()) + # Format the y-axis to show commas.
theme(legend.position = "right")
pop_bar
hr_pop <- read_rds("data/population_data.rds") |>
mutate(year = as.numeric(year)) |>
group_by(name_long) |>
mutate(diff = value - lag(value),
diff = replace_na(diff, 0)) |>
mutate(run_diff = cumsum(diff))|>
filter(run_diff != 0) |>
mutate(year = as.character(year)) |>
mutate(type = case_when(
str_detect(name_long, "City") ~ "City",
TRUE ~ "County"
))
View(hr_pop)
hr_pop <- read_rds("data/population_data.rds") |>
mutate(year = as.numeric(year)) |>
group_by(name_long) |>
mutate(diff = value - lag(value),
diff = replace_na(diff, 0)) |>
mutate(run_diff = cumsum(diff))|>
filter(run_diff != 0) |>
mutate(year = as.character(year)) |>
mutate(type = case_when(
str_detect(name_long, "City") ~ "City",
TRUE ~ "County"
))
pop_bar <- ggplot(hr_pop, # Read in the data.
aes(x = year, # Plot the x-axis.
y = run_diff, # Plot the y-axis.
fill = name_long, # Set the variable that will be colored.
data_id = run_diff, # Set the variable that will be used in interactive plot.
tooltip = label_comma()(run_diff))) + # Set the format of the data label on hover.
geom_col() + # Set as a bar chart.
facet_wrap(~type, nrow = 2) +
geom_col_interactive(size = 2) + # Add interactive geometry for ggiraph widget.
theme_hfv() + # Apply custom HFV theme.
add_zero_line("y") + # Add darker zero intercept line for emphasis.
# scale_fill_gradientn(colours = c("#ADDCB1", "#46A88F", "#207A88", "#0F1A4E")) + # Use custom HFV gradient.
labs(title = "Total population of Hampton Roads region",
subtitle = "From 2010 to 2020",
caption = "**Source:** U.S. Census Bureau, Population Estimates Program (PEP).") +
scale_y_continuous(label = label_comma()) + # Format the y-axis to show commas.
theme(legend.position = "right")
pop_bar
city_pop <- hr_pop |>
filter(type == "City")
county_pop <- hr_pop |>
filter(type == "County")
hr_pop <- read_rds("data/population_data.rds") |>
mutate(year = as.numeric(year)) |>
group_by(name_long) |>
mutate(diff = value - lag(value),
diff = replace_na(diff, 0)) |>
mutate(run_diff = cumsum(diff))|>
filter(run_diff != 0) |>
mutate(year = as.character(year)) |>
mutate(type = case_when(
str_detect(name_long, "City") ~ "City",
TRUE ~ "County"
))
city_pop <- hr_pop |>
filter(type == "City")
county_pop <- hr_pop |>
filter(type == "County")
city_pop_bar <- ggplot(city_pop, # Read in the data.
aes(x = year, # Plot the x-axis.
y = run_diff, # Plot the y-axis.
fill = name_long, # Set the variable that will be colored.
data_id = run_diff, # Set the variable that will be used in interactive plot.
tooltip = label_comma()(run_diff))) + # Set the format of the data label on hover.
geom_col() + # Set as a bar chart.
geom_col_interactive(size = 2) + # Add interactive geometry for ggiraph widget.
theme_hfv() + # Apply custom HFV theme.
add_zero_line("y") + # Add darker zero intercept line for emphasis.
# scale_fill_gradientn(colours = c("#ADDCB1", "#46A88F", "#207A88", "#0F1A4E")) + # Use custom HFV gradient.
scale_fill_hfv() +
labs(title = "Total population of Hampton Roads region",
subtitle = "From 2010 to 2020",
caption = "**Source:** U.S. Census Bureau, Population Estimates Program (PEP).") +
scale_y_continuous(label = label_comma()) + # Format the y-axis to show commas.
theme(legend.position = "right")
city_pop_bar
hr_pop <- read_rds("data/population_data.rds") |>
mutate(year = as.numeric(year)) |>
group_by(name_long) |>
mutate(diff = value - lag(value),
diff = replace_na(diff, 0)) |>
mutate(run_diff = cumsum(diff))|>
filter(run_diff != 0) |>
mutate(year = as.character(year)) |>
mutate(type = case_when(
str_detect(name_long, "City") ~ "City",
TRUE ~ "County"
))
city_pop <- hr_pop |>
filter(type == "City")
county_pop <- hr_pop |>
filter(type == "County")
city_pop_bar <- ggplot(city_pop, # Read in the data.
aes(x = year, # Plot the x-axis.
y = run_diff, # Plot the y-axis.
fill = name_long, # Set the variable that will be colored.
data_id = run_diff, # Set the variable that will be used in interactive plot.
tooltip = label_comma()(run_diff))) + # Set the format of the data label on hover.
geom_col(position = "stack") + # Set as a bar chart.
geom_col_interactive(size = 2, position = "stack") + # Add interactive geometry for ggiraph widget.
theme_hfv() + # Apply custom HFV theme.
add_zero_line("y") + # Add darker zero intercept line for emphasis.
# scale_fill_gradientn(colours = c("#ADDCB1", "#46A88F", "#207A88", "#0F1A4E")) + # Use custom HFV gradient.
scale_fill_hfv() +
labs(title = "Total population of Hampton Roads region",
subtitle = "From 2010 to 2020",
caption = "**Source:** U.S. Census Bureau, Population Estimates Program (PEP).") +
scale_y_continuous(label = label_comma()) + # Format the y-axis to show commas.
theme(legend.position = "right")
city_pop_bar
city_pop_bar <- ggplot(city_pop, # Read in the data.
aes(x = year, # Plot the x-axis.
y = run_diff, # Plot the y-axis.
fill = name_long, # Set the variable that will be colored.
data_id = run_diff, # Set the variable that will be used in interactive plot.
tooltip = label_comma()(run_diff))) + # Set the format of the data label on hover.
geom_col(position = "stack") + # Set as a bar chart.
geom_col_interactive(size = 2, position = "stack") + # Add interactive geometry for ggiraph widget.
theme_hfv() + # Apply custom HFV theme.
# add_zero_line("y") + # Add darker zero intercept line for emphasis.
# scale_fill_gradientn(colours = c("#ADDCB1", "#46A88F", "#207A88", "#0F1A4E")) + # Use custom HFV gradient.
scale_fill_hfv() +
labs(title = "Total population of Hampton Roads region",
subtitle = "From 2010 to 2020",
caption = "**Source:** U.S. Census Bureau, Population Estimates Program (PEP).") +
scale_y_continuous(label = label_comma()) + # Format the y-axis to show commas.
theme(legend.position = "right")
city_pop_bar
View(city_pop_bar)
View(city_pop)
hr_pop <- read_rds("data/population_data.rds") |>
mutate(year = as.numeric(year)) |>
group_by(name_long) |>
mutate(diff = value - lag(value),
diff = replace_na(diff, 0)) |>
mutate(run_diff = cumsum(diff))|>
filter(run_diff != 0) |>
mutate(year = as.character(year)) |>
mutate(type = case_when(
str_detect(name_long, "City") ~ "City",
TRUE ~ "County"
))
city_pop <- hr_pop |>
filter(type == "City")
county_pop <- hr_pop |>
filter(type == "County")
city_pop_bar <- ggplot(city_pop, # Read in the data.
aes(x = year, # Plot the x-axis.
y = run_diff, # Plot the y-axis.
fill = name_long, # Set the variable that will be colored.
data_id = run_diff, # Set the variable that will be used in interactive plot.
tooltip = label_comma()(run_diff))) + # Set the format of the data label on hover.
geom_col() + # Set as a bar chart.
geom_col_interactive(size = 2) + # Add interactive geometry for ggiraph widget.
theme_hfv() + # Apply custom HFV theme.
# add_zero_line("y") + # Add darker zero intercept line for emphasis.
labs(title = "Total population of Hampton Roads region",
subtitle = "From 2010 to 2020",
caption = "**Source:** U.S. Census Bureau, Population Estimates Program (PEP).") +
scale_y_continuous(label = label_comma()) + # Format the y-axis to show commas.
theme(legend.position = "right")
city_pop_bar
hr_pop <- read_rds("data/population_data.rds") |>
mutate(year = as.numeric(year)) |>
group_by(name_long) |>
mutate(diff = value - lag(value),
diff = replace_na(diff, 0)) |>
mutate(run_diff = cumsum(diff))|>
filter(run_diff != 0) |>
mutate(year = as.character(year)) |>
mutate(type = case_when(
str_detect(name_long, "City") ~ "City",
TRUE ~ "County"
))
city_pop <- hr_pop |>
filter(type == "City")
county_pop <- hr_pop |>
filter(type == "County")
city_pop_bar <- ggplot(city_pop, # Read in the data.
aes(x = year, # Plot the x-axis.
y = run_diff, # Plot the y-axis.
fill = name_long, # Set the variable that will be colored.
data_id = run_diff, # Set the variable that will be used in interactive plot.
tooltip = label_comma()(run_diff))) + # Set the format of the data label on hover.
geom_col() + # Set as a bar chart.
geom_col_interactive(size = 2) + # Add interactive geometry for ggiraph widget.
scale_fill_hfv() +
theme_hfv() + # Apply custom HFV theme.
# add_zero_line("y") + # Add darker zero intercept line for emphasis.
labs(title = "Total population of Hampton Roads region",
subtitle = "From 2010 to 2020",
caption = "**Source:** U.S. Census Bureau, Population Estimates Program (PEP).") +
scale_y_continuous(label = label_comma()) + # Format the y-axis to show commas.
theme(legend.position = "right")
city_pop_bar
hr_pop <- read_rds("data/population_data.rds") |>
mutate(year = as.numeric(year)) |>
group_by(name_long) |>
mutate(diff = value - lag(value),
diff = replace_na(diff, 0)) |>
mutate(run_diff = cumsum(diff))|>
filter(run_diff != 0) |>
mutate(year = as.character(year)) |>
mutate(type = case_when(
str_detect(name_long, "City") ~ "City",
TRUE ~ "County"
))
city_pop <- hr_pop |>
filter(type == "City")
county_pop <- hr_pop |>
filter(type == "County")
city_pop_bar <- ggplot(city_pop, # Read in the data.
aes(x = year, # Plot the x-axis.
y = run_diff, # Plot the y-axis.
fill = name_long, # Set the variable that will be colored.
data_id = run_diff, # Set the variable that will be used in interactive plot.
tooltip = label_comma()(run_diff))) + # Set the format of the data label on hover.
geom_col() + # Set as a bar chart.
geom_col_interactive(size = 2) + # Add interactive geometry for ggiraph widget.
scale_fill_hfv(repeat_pal = TRUE) +
theme_hfv() + # Apply custom HFV theme.
# add_zero_line("y") + # Add darker zero intercept line for emphasis.
labs(title = "Total population of Hampton Roads region",
subtitle = "From 2010 to 2020",
caption = "**Source:** U.S. Census Bureau, Population Estimates Program (PEP).") +
scale_y_continuous(label = label_comma()) + # Format the y-axis to show commas.
theme(legend.position = "right")
city_pop_bar
hr_pop <- read_rds("data/population_data.rds") |>
mutate(year = as.numeric(year)) |>
group_by(name_long) |>
mutate(diff = value - lag(value),
diff = replace_na(diff, 0)) |>
mutate(run_diff = cumsum(diff))|>
filter(run_diff != 0) |>
mutate(year = as.character(year)) |>
mutate(type = case_when(
str_detect(name_long, "City") ~ "City",
TRUE ~ "County"
))
city_pop <- hr_pop |>
filter(type == "City")
county_pop <- hr_pop |>
filter(type == "County")
city_pop_bar <- ggplot(city_pop, # Read in the data.
aes(x = year, # Plot the x-axis.
y = run_diff, # Plot the y-axis.
fill = name_long, # Set the variable that will be colored.
data_id = run_diff, # Set the variable that will be used in interactive plot.
tooltip = label_comma()(run_diff))) + # Set the format of the data label on hover.
geom_col() + # Set as a bar chart.
geom_col_interactive(size = 2) + # Add interactive geometry for ggiraph widget.
theme_hfv() + # Apply custom HFV theme.
# add_zero_line("y") + # Add darker zero intercept line for emphasis.
labs(title = "Total population of Hampton Roads region",
subtitle = "From 2010 to 2020",
caption = "**Source:** U.S. Census Bureau, Population Estimates Program (PEP).") +
scale_y_continuous(label = label_comma()) + # Format the y-axis to show commas.
theme(legend.position = "right")
city_pop_bar
hr_pop <- read_rds("data/population_data.rds") |>
mutate(year = as.numeric(year)) |>
group_by(name_long) |>
mutate(diff = value - lag(value),
diff = replace_na(diff, 0)) |>
mutate(run_diff = cumsum(diff))|>
filter(run_diff != 0) |>
mutate(year = as.character(year)) |>
mutate(type = case_when(
str_detect(name_long, "City") ~ "City",
TRUE ~ "County"
))
city_pop <- hr_pop |>
filter(type == "City")
county_pop <- hr_pop |>
filter(type == "County")
city_pop_bar <- ggplot(city_pop, # Read in the data.
aes(x = year, # Plot the x-axis.
y = run_diff, # Plot the y-axis.
fill = name_long, # Set the variable that will be colored.
data_id = run_diff, # Set the variable that will be used in interactive plot.
tooltip = label_comma()(run_diff))) + # Set the format of the data label on hover.
geom_col() + # Set as a bar chart.
scale_fill_brewer(palette="Set1") +
geom_col_interactive(size = 2) + # Add interactive geometry for ggiraph widget.
theme_hfv() + # Apply custom HFV theme.
# add_zero_line("y") + # Add darker zero intercept line for emphasis.
labs(title = "Total population of Hampton Roads region",
subtitle = "From 2010 to 2020",
caption = "**Source:** U.S. Census Bureau, Population Estimates Program (PEP).") +
scale_y_continuous(label = label_comma()) + # Format the y-axis to show commas.
theme(legend.position = "right")
city_pop_bar
hr_pop <- read_rds("data/population_data.rds") |>
mutate(year = as.numeric(year)) |>
group_by(name_long) |>
mutate(diff = value - lag(value),
diff = replace_na(diff, 0)) |>
mutate(run_diff = cumsum(diff))|>
filter(run_diff != 0) |>
mutate(year = as.character(year)) |>
mutate(type = case_when(
str_detect(name_long, "City") ~ "City",
TRUE ~ "County"
))
city_pop <- hr_pop |>
filter(type == "City")
county_pop <- hr_pop |>
filter(type == "County")
city_pop_bar <- ggplot(city_pop, # Read in the data.
aes(x = year, # Plot the x-axis.
y = run_diff, # Plot the y-axis.
fill = name_long, # Set the variable that will be colored.
data_id = run_diff, # Set the variable that will be used in interactive plot.
tooltip = label_comma()(run_diff))) + # Set the format of the data label on hover.
geom_col() + # Set as a bar chart.
geom_col_interactive(size = 2) + # Add interactive geometry for ggiraph widget.
theme_hfv() + # Apply custom HFV theme.
# add_zero_line("y") + # Add darker zero intercept line for emphasis.
labs(title = "Total population of Hampton Roads region",
subtitle = "From 2010 to 2020",
caption = "**Source:** U.S. Census Bureau, Population Estimates Program (PEP).") +
scale_y_continuous(label = label_comma()) + # Format the y-axis to show commas.
theme(legend.position = "right")
city_pop_bar
#| label: setup
library(tidyverse)
library(tidycensus)
library(ggplot2)
library(ggiraph)
library(sf)
library(leaflet)
library(FinCal)
library(hdatools)
library(scales)
library(forcats)
hr_fips <- c("51073", "51093", "51095","51175", "51181", "51199", "51550", "51620", "51650", "51700", "51710", "51735", "51740", "51800", "51810", "51830")
local_lookup <- read_csv("data/local_lookup.csv") |>
select(fips = fips_full, name_long) |>
mutate(fips = as.character(fips))
hr_pop <- read_rds("data/population_data.rds") |>
mutate(year = as.numeric(year)) |>
group_by(name_long) |>
mutate(diff = value - lag(value),
diff = replace_na(diff, 0)) |>
mutate(run_diff = cumsum(diff))|>
filter(run_diff != 0) |>
mutate(year = as.character(year)) |>
mutate(type = case_when(
str_detect(name_long, "City") ~ "City",
TRUE ~ "County"
))
city_pop <- hr_pop |>
filter(type == "City")
county_pop <- hr_pop |>
filter(type == "County")
city_pop_bar <- ggplot(city_pop, # Read in the data.
aes(x = year, # Plot the x-axis.
y = run_diff, # Plot the y-axis.
fill = fct_reorder(name_long, run_diff), # Set the variable that will be colored.
data_id = run_diff, # Set the variable that will be used in interactive plot.
tooltip = label_comma()(run_diff))) + # Set the format of the data label on hover.
geom_col() + # Set as a bar chart.
geom_col_interactive(size = 2) + # Add interactive geometry for ggiraph widget.
theme_hfv() + # Apply custom HFV theme.
# add_zero_line("y") + # Add darker zero intercept line for emphasis.
labs(title = "Total population of Hampton Roads region",
subtitle = "From 2010 to 2020",
caption = "**Source:** U.S. Census Bureau, Population Estimates Program (PEP).") +
scale_y_continuous(label = label_comma()) + # Format the y-axis to show commas.
theme(legend.position = "right")
city_pop_bar
hr_pop <- read_rds("data/population_data.rds") |>
mutate(year = as.numeric(year)) |>
group_by(name_long) |>
mutate(diff = value - lag(value),
diff = replace_na(diff, 0)) |>
mutate(run_diff = cumsum(diff))|>
filter(run_diff != 0) |>
mutate(year = as.character(year)) |>
mutate(type = case_when(
str_detect(name_long, "City") ~ "City",
TRUE ~ "County"
))
city_pop <- hr_pop |>
filter(type == "City")
county_pop <- hr_pop |>
filter(type == "County")
city_pop_bar <- ggplot(city_pop, # Read in the data.
aes(x = year, # Plot the x-axis.
y = run_diff, # Plot the y-axis.
fill = fct_reorder(name_long, run_diff), # Set the variable that will be colored.
data_id = run_diff, # Set the variable that will be used in interactive plot.
tooltip = label_comma()(run_diff))) + # Set the format of the data label on hover.
geom_col() + # Set as a bar chart.
geom_col_interactive(size = 2) + # Add interactive geometry for ggiraph widget.
theme_hfv() + # Apply custom HFV theme.
# add_zero_line("y") + # Add darker zero intercept line for emphasis.
labs(title = "Population change in the Hampton Roads region",
subtitle = "From 2010 to 2020",
caption = "**Source:** U.S. Census Bureau, Population Estimates Program (PEP).") +
scale_y_continuous(label = label_comma()) + # Format the y-axis to show commas.
theme(legend.position = "right")
city_pop_bar
bps_years <- 2010:2022
header_rows <- read_csv("https://www2.census.gov/econ/bps/County/co2020a.txt",
col_names = FALSE,
n_max = 2)
column_names <- header_rows |>
select(X1:X18) |>
t() |>
as_tibble() |>
mutate(group = rep(1:6, each = 3)) |>
group_by(group) |>
fill(V1, .direction = "updown") |>
mutate(names = paste0(V1, ": ", V2)) |>
pull(names)
library(glue)
cbps_raw <- map_df(bps_years, ~{
raw <- read_csv(glue("https://www2.census.gov/econ/bps/County/co{.x}a.txt"), skip = 2,
col_names = FALSE) |>
select(X1:X18) |>
set_names(column_names)
raw
})
hr_bps <- cbps_raw |>
mutate(year = `Survey: Date`,
GEOID = paste0(`FIPS: State`, `FIPS: County`)) |>
select(`1-unit: Bldgs`:GEOID) |>
filter(GEOID %in% hr_fips) |>
pivot_longer(`1-unit: Bldgs`:`5+ units: Value`,
names_to = "type",
values_to = "value") |>
separate(type, into = c("Type", "col"), sep = ": ") |>
pivot_wider(names_from = col,
values_from = value) |>
rename_with(tolower, Type:Value) |>
select(fips = GEOID, year, type:units)
View(hr_bps)
write_rds(hr_bps, "data/hr_bps.rds")
county_pop_bar <- ggplot(county_pop, # Read in the data.
aes(x = year, # Plot the x-axis.
y = run_diff, # Plot the y-axis.
fill = fct_reorder(name_long, run_diff), # Set the variable that will be colored.
data_id = run_diff, # Set the variable that will be used in interactive plot.
tooltip = label_comma()(run_diff))) + # Set the format of the data label on hover.
geom_col() + # Set as a bar chart.
geom_col_interactive(size = 2) + # Add interactive geometry for ggiraph widget.
theme_hfv() + # Apply custom HFV theme.
# add_zero_line("y") + # Add darker zero intercept line for emphasis.
labs(title = "Population change in the Hampton Roads region by county",
subtitle = "From 2010 to 2020",
caption = "**Source:** U.S. Census Bureau, Population Estimates Program (PEP).") +
scale_y_continuous(label = label_comma()) + # Format the y-axis to show commas.
theme(legend.position = "right")
county_pop_bar
county_pop_bar <- ggplot(county_pop, # Read in the data.
aes(x = year, # Plot the x-axis.
y = run_diff, # Plot the y-axis.
fill = fct_reorder(name_long, run_diff), # Set the variable that will be colored.
data_id = run_diff, # Set the variable that will be used in interactive plot.
tooltip = label_comma()(run_diff))) + # Set the format of the data label on hover.
geom_col() + # Set as a bar chart.
geom_col_interactive(size = 2) + # Add interactive geometry for ggiraph widget.
theme_hfv() + # Apply custom HFV theme.
add_zero_line("y") + # Add darker zero intercept line for emphasis.
labs(title = "Population change in the Hampton Roads region by county",
subtitle = "From 2010 to 2020",
caption = "**Source:** U.S. Census Bureau, Population Estimates Program (PEP).") +
scale_y_continuous(label = label_comma()) + # Format the y-axis to show commas.
theme(legend.position = "right")
county_pop_bar
library(tidyverse)
