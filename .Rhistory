install.packages("geojsonR")
install.packages('geojsonio')
library(geojsonio)
districts <- geojson_read("data/GloucesterGloucesterCountyVA-ZoningDistricts.geojson")
View(districts)
library(geojsonsf)
library(tidyverse)
district_data <- read_csv("data/GloucesterGloucesterCountyVA-ZoningDistricts.csv")
districts <- geojson_sf("data/GloucesterGloucesterCountyVA-ZoningDistricts.geojson")
View(districts)
district_data <- read_csv("data/GloucesterGloucesterCountyVA-ZoningDistricts.csv")
View(districts)
View(district_data)
View(district_data)
View(districts)
districts <- geojson_sf("data/GloucesterGloucesterCountyVA-ZoningDistricts.geojson")
View(district_data)
View(districts)
library(tidyverse)
library(leaflet)
library(sf)
library(geojsonsf)
districts_bounds <- geojson_sf("data/GloucesterGloucesterCountyVA-ZoningDistricts.geojson")
district_data <- read_csv("data/GloucesterGloucesterCountyVA-ZoningDistricts.csv")
View(districts_bounds)
library(tidyverse)
library(leaflet)
library(sf)
library(geojsonsf)
districts_bounds <- geojson_sf("data/gloucester_county_zoning_final.geojson")
district_data <- read_csv("data/GloucesterGloucesterCountyVA-ZoningDistricts.csv")
View(districts_bounds)
library(tidyverse)
library(leaflet)
library(sf)
library(geojsonsf)
districts_bounds <- geojson_sf("data/gloucester_county_zoning_final.geojson")
district_data <- read_csv("data/GloucesterGloucesterCountyVA-ZoningDistricts.csv")
disricts <- district_data |>
left_join(district_bounds, by = "Abbreviated District Name")
disricts <- district_data |>
left_join(district_bounds, by = "Abbreviated District Name")
disricts <- district_data |>
left_join(districts_bounds, by = "Abbreviated District Name")
View(disricts)
View(districts)
library(tidyverse)
library(leaflet)
library(sf)
library(geojsonsf)
districts_bounds <- geojson_sf("data/gloucester_county_zoning_final.geojson")
district_data <- read_csv("data/GloucesterGloucesterCountyVA-ZoningDistricts.csv")
disricts <- district_data |>
left_join(districts_bounds, by = "Abbreviated District Name")
View(disricts)
disricts <- district_data |>
left_join(districts_bounds, by = "Abbreviated District Name")
districts <- district_data |>
left_join(districts_bounds, by = "Abbreviated District Name")
leaflet() |>
addProviderTiles() |>
addPolygons(data = districts)
leaflet() |>
addProviderTiles() |>
addPolygons(data = districts)
library(tidyverse)
library(leaflet)
library(sf)
library(geojsonsf)
district_bounds <- geojson_sf("data/gloucester_county_zoning_final.geojson")
district_data <- read_csv("data/GloucesterGloucesterCountyVA-ZoningDistricts.csv")
districts <- district_bounds |>
left_join(district_dara, by = "Abbreviated District Name")
library(tidyverse)
library(leaflet)
library(sf)
library(geojsonsf)
district_bounds <- geojson_sf("data/gloucester_county_zoning_final.geojson")
district_data <- read_csv("data/GloucesterGloucesterCountyVA-ZoningDistricts.csv")
districts <- district_bounds |>
left_join(district_data, by = "Abbreviated District Name")
leaflet() |>
addProviderTiles() |>
addPolygons(data = districts)
leaflet() |>
addProviderTiles("OpenStreetMap") |>
addPolygons(data = districts)
leaflet() |>
addProviderTiles("OpenStreetMap") |>
addPolygons(data = districts, color = ~pal("Abbreivated District Name"))
district_bounds <- st_read("data/GloucesterGloucesterCountyVA-ZoningDistricts.geojson")
library(tidyverse)
library(leaflet)
library(sf)
library(geojsonsf)
district_bounds <- st_read("data/GloucesterGloucesterCountyVA-ZoningDistricts.geojson")
View(district_bounds)
leaflet() |>
addProviderTiles("OpenStreetMap") |>
addPolygons(data = district_bounds)
View(district_bounds)
district_bounds <- st_read("data/GloucesterGloucesterCountyVA-ZoningDistricts.geojson")
library(tidyverse)
library(leaflet)
library(sf)
district_bounds <- st_read("data/GloucesterGloucesterCountyVA-ZoningDistricts.geojson")
district_data <- read_csv("data/GloucesterGloucesterCountyVA-ZoningDistricts.csv")
View(district_bounds)
library(janitor)
()
library(tidyverse)
library(janitor)
library(leaflet)
library(sf)
district_bounds <- st_read("data/GloucesterGloucesterCountyVA-ZoningDistricts.geojson") |>
clean_names()
View(district_bounds)
pal <- colorFactor(palette = c("#011E41", "#334A66", "#66788d", "#CCCCCC",
domain = c("Primarily Residential", "Mixed with Residential", "Nonresidential")))
library(tidyverse)
library(janitor)
library(leaflet)
library(sf)
district_bounds <- st_read("data/GloucesterGloucesterCountyVA-ZoningDistricts.geojson") |>
clean_names()
district_data <- read_csv("data/GloucesterGloucesterCountyVA-ZoningDistricts.csv")
pal <- colorFactor(palette = c("#011E41", "#334A66", "#66788d", "#CCCCCC",
domain = district_bounds$type_of_zoning_district))
library(tidyverse)
library(janitor)
library(leaflet)
library(sf)
district_bounds <- st_read("data/GloucesterGloucesterCountyVA-ZoningDistricts.geojson") |>
clean_names()
district_data <- read_csv("data/GloucesterGloucesterCountyVA-ZoningDistricts.csv")
pal <- colorFactor(palette = c("#011E41", "#334A66", "#66788d", "#CCCCCC"),
domain = district_bounds$type_of_zoning_district)))
library(tidyverse)
library(janitor)
library(leaflet)
library(sf)
district_bounds <- st_read("data/GloucesterGloucesterCountyVA-ZoningDistricts.geojson") |>
clean_names()
district_data <- read_csv("data/GloucesterGloucesterCountyVA-ZoningDistricts.csv")
pal <- colorFactor(palette = c("#011E41", "#334A66", "#66788d", "#CCCCCC"),
domain = district_bounds$type_of_zoning_district))
library(tidyverse)
library(janitor)
library(leaflet)
library(sf)
district_bounds <- st_read("data/GloucesterGloucesterCountyVA-ZoningDistricts.geojson") |>
clean_names()
district_data <- read_csv("data/GloucesterGloucesterCountyVA-ZoningDistricts.csv")
pal <- colorFactor(palette = c("#011E41", "#334A66", "#66788d", "#CCCCCC"),
domain = district_bounds$type_of_zoning_district)
leaflet(district_bounds) |>
addProviderTiles("OpenStreetMap") |>
addPolygons(color = ~pal(type_of_zoning_district))
leaflet(district_bounds) |>
addProviderTiles("OpenStreetMap") |>
addPolygons(fillColor = ~pal(type_of_zoning_district))
leaflet(district_bounds) |>
addProviderTiles("OpenStreetMap") |>
addPolygons(color = "#ffffff", fillColor = ~pal(type_of_zoning_district))
leaflet(district_bounds) |>
addProviderTiles("OpenStreetMap") |>
addPolygons(color = "#ffffff", weight = 1, smoothFactor = 0.5,
fillColor = ~pal(type_of_zoning_district),
fillOpacity = 0.8)
View(district_bounds)
library(tidyverse)
library(janitor)
library(leaflet)
library(sf)
district_bounds <- st_read("data/GloucesterGloucesterCountyVA-ZoningDistricts.geojson") |>
clean_names()
district_data <- read_csv("data/GloucesterGloucesterCountyVA-ZoningDistricts.csv")
pal <- colorFactor(palette = c("#011E41", "#334A66", "#66788d"),
domain = district_bounds$type_of_zoning_district)
leaflet(district_bounds) |>
addProviderTiles("OpenStreetMap") |>
addPolygons(color = "#ffffff", weight = 1, smoothFactor = 0.5,
fillColor = ~pal(type_of_zoning_district),
fillOpacity = 0.8)
pal <- colorFactor(palette = c("#40c0c0", "#b2e5e5", "#66788d"),
domain = district_bounds$type_of_zoning_district)
leaflet(district_bounds) |>
addProviderTiles("OpenStreetMap") |>
addPolygons(color = "#ffffff", weight = 1, smoothFactor = 0.5,
fillColor = ~pal(type_of_zoning_district),
fillOpacity = 0.8)
pal <- colorFactor(palette = c("#B1005F", "#A29DD4", "#999999"),
domain = district_bounds$type_of_zoning_district)
leaflet(district_bounds) |>
addProviderTiles("OpenStreetMap") |>
addPolygons(color = "#ffffff", weight = 1, smoothFactor = 0.5,
fillColor = ~pal(type_of_zoning_district),
fillOpacity = 0.8)
pal <- colorFactor(palette = c("#B1005F", "#A29DD4", "#999999"),
domain = c("Primarily Residential", "Mixed with Residential", "Nonresidential"))
leaflet(district_bounds) |>
addProviderTiles("OpenStreetMap") |>
addPolygons(color = "#ffffff", weight = 1, smoothFactor = 0.5,
fillColor = ~pal(type_of_zoning_district),
fillOpacity = 0.8)
pal <- colorFactor(palette = c("#B1005F", "#A29DD4", "#999999"),
domain = district_bounds$type_of_zoning_district)
leaflet(district_bounds) |>
addProviderTiles("OpenStreetMap") |>
addPolygons(color = "#ffffff", weight = 1, smoothFactor = 0.5,
fillColor = ~pal(type_of_zoning_district),
fillOpacity = 0.8)
pal <- colorFactor(palette = c("#B1005F", "#A29DD4", "#999999"),
levels = c("Primarily Residential", "Mixed with Residential", "Nonresidential"))
leaflet(district_bounds) |>
addProviderTiles("OpenStreetMap") |>
addPolygons(color = "#ffffff", weight = 1, smoothFactor = 0.5,
fillColor = ~pal(type_of_zoning_district),
fillOpacity = 0.8)
pal <- colorFactor(palette = c("#40C0C0", "#A29DD4", "#999999"),
levels = c("Primarily Residential", "Mixed with Residential", "Nonresidential"))
leaflet(district_bounds) |>
addProviderTiles("OpenStreetMap") |>
addPolygons(color = "#ffffff", weight = 1, smoothFactor = 0.5,
fillColor = ~pal(type_of_zoning_district),
fillOpacity = 0.8)
leaflet(district_bounds) |>
addProviderTiles("providers$CartoDB.Positron") |>
addPolygons(color = "#ffffff", weight = 1, smoothFactor = 0.5,
fillColor = ~pal(type_of_zoning_district),
fillOpacity = 0.8)
leaflet(district_bounds) |>
addProviderTiles("CartoDB.Positron") |>
addPolygons(color = "#ffffff", weight = 1, smoothFactor = 0.5,
fillColor = ~pal(type_of_zoning_district),
fillOpacity = 0.8)
district_bounds <- st_read("data/GloucesterGloucesterCountyVA-ZoningDistricts.geojson") |>
clean_names() |>
select(jurisdiction, county, 9:10, 15:100)
library(tidyverse)
library(janitor)
library(leaflet)
library(sf)
district_bounds <- st_read("data/GloucesterGloucesterCountyVA-ZoningDistricts.geojson") |>
clean_names() |>
select(jurisdiction, county, 9:10, 15:100)
View(district_bounds)
View(district_bounds)
district_bounds <- st_read("data/GloucesterGloucesterCountyVA-ZoningDistricts.geojson") |>
clean_names() |>
select(jurisdiction, county, 9:10, 15:100) |>
select(special_notes)
district_bounds <- st_read("data/GloucesterGloucesterCountyVA-ZoningDistricts.geojson")
View(district_bounds)
View(district_bounds)
View(district_bounds)
district_bounds <- st_read("data/GloucesterGloucesterCountyVA-ZoningDistricts.geojson") |>
clean_names()
district_bounds <- st_read("data/GloucesterGloucesterCountyVA-ZoningDistricts.geojson", quiet = TRUE) |>
clean_names()
leaflet(district_bounds |>
filter(x1_family_treatment = "Allowed/Condition")) |>
addProviderTiles("CartoDB.Positron") |>
addPolygons(color = "#ffffff", weight = 1, smoothFactor = 0.5,
fillColor = ~pal(type_of_zoning_district),
fillOpacity = 0.8)
leaflet(district_bounds |>
filter(x1_family_treatment == "Allowed/Condition")) |>
addProviderTiles("CartoDB.Positron") |>
addPolygons(color = "#ffffff", weight = 1, smoothFactor = 0.5,
fillColor = ~pal(type_of_zoning_district),
fillOpacity = 0.8)
library(tidyverse)
library(janitor)
library(leaflet)
library(sf)
district_bounds <- st_read("data/GloucesterGloucesterCountyVA-ZoningDistricts.geojson", quiet = TRUE) |>
clean_names()
district_data <- read_csv("data/GloucesterGloucesterCountyVA-ZoningDistricts.csv")
pal <- colorFactor(palette = c("#40C0C0", "#A29DD4", "#999999"),
levels = c("Primarily Residential", "Mixed with Residential", "Nonresidential"))
leaflet(district_bounds |>
filter(x1_family_treatment == "Allowed/Condition")) |>
addProviderTiles("CartoDB.Positron") |>
addPolygons(color = "#ffffff", weight = 1, smoothFactor = 0.5,
fillColor = ~pal(type_of_zoning_district),
fillOpacity = 0.8)
leaflet(district_bounds |>
filter(x1_family_treatment == "Allowed/Conditional")) |>
addProviderTiles("CartoDB.Positron") |>
addPolygons(color = "#ffffff", weight = 1, smoothFactor = 0.5,
fillColor = ~pal(type_of_zoning_district),
fillOpacity = 0.8)
leaflet(district_bounds |>
filter(x4_family_treatment == "Allowed/Conditional") |>
filter) |>
addProviderTiles("CartoDB.Positron") |>
addPolygons(color = "#ffffff", weight = 1, smoothFactor = 0.5,
fillColor = ~pal(type_of_zoning_district),
fillOpacity = 0.8)
leaflet(district_bounds |>
filter(x4_family_treatment == "Allowed/Conditional") |>
filter) |>
addProviderTiles("CartoDB.Positron") |>
addPolygons(color = "#ffffff", weight = 1, smoothFactor = 0.5,
fillColor = ~pal(type_of_zoning_district),
fillOpacity = 0.8)
leaflet(district_bounds |>
filter(x4_family_treatment == "Allowed/Conditional")) |>
addProviderTiles("CartoDB.Positron") |>
addPolygons(color = "#ffffff", weight = 1, smoothFactor = 0.5,
fillColor = ~pal(type_of_zoning_district),
fillOpacity = 0.8)
leaflet(district_bounds |>
filter(x1_family_treatment == "Allowed/Conditional") |>
filter(x2_family_treatment == "Allowed/Conditional") |>
filter(x3_family_treatment == "Allowed/Conditional") |>
filter(x4_family_treatment == "Allowed/Conditional")) |>
addProviderTiles("CartoDB.Positron") |>
addPolygons(color = "#ffffff", weight = 1, smoothFactor = 0.5,
fillColor = ~pal(type_of_zoning_district),
fillOpacity = 0.8)
leaflet(district_bounds |>
filter(x1_family_treatment == "Allowed/Conditional") |>
filter(x2_family_treatment == "Allowed/Conditional") |>
filter(x3_family_treatment == "Allowed/Conditional") |>
filter(x4_family_treatment == "Allowed/Conditional")) |>
addProviderTiles("CartoDB.Positron") |>
addPolygons(color = "#ffffff", weight = 1, smoothFactor = 0.5,
fillColor = ~pal(type_of_zoning_district),
fillOpacity = 0.8)
addProviderTiles("CartoDB.Positron") |>
addPolygons(color = "#ffffff", weight = 1, smoothFactor = 0.5,
fillColor = ~pal(type_of_zoning_district),
fillOpacity = 0.8)
fillOpacity = 0.8)
fillOpacity = 0.8)
fillOpacity = 0.8)
leaflet(district_bounds |>
filter(x1_family_treatment == "Allowed/Conditional" | x2_family_treatment == "Allowed/Conditional" | x3_family_treatment == "Allowed/Conditional" | x4_family_treatment == "Allowed/Conditional")) |>
addProviderTiles("CartoDB.Positron") |>
addPolygons(color = "#ffffff", weight = 1, smoothFactor = 0.5,
fillColor = ~pal(type_of_zoning_district),
fillOpacity = 0.8)
zoning <- st_read("gloucester_zoning.geojson", quiet = TRUE) |>
clean_names()
View(district_bounds)
shiny::runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
runApp('map')
library(sf)
gl <- st_read("data/gloucester_county_zoning_final.geojson")
ex <- st_read("../web-map-sample-va/data/final.20220427.geojson")
gl
mapview::mapview(gl, zcol = "Abbreviated.District.Name")
View(ex)
View(gl)
district_data <- read_csv("data/GloucesterGloucesterCountyVA-ZoningDistricts.csv")
library(tidyverse)
library(janitor)
library(leaflet)
library(sf)
district_bounds <- st_read("data/GloucesterGloucesterCountyVA-ZoningDistricts.geojson", quiet = TRUE) |>
clean_names()
district_data <- read_csv("data/GloucesterGloucesterCountyVA-ZoningDistricts.csv")
View(district_bounds)
gl2 <- st_read("map/gloucester_zoning.geojson")
View(gl2)
unique(gl2$Type.of.Zoning.District)
names(gl2)
library(tidycensus)
place_shift <- get_estimates(
geography = "place",
variables = "NPOPCHG",
year = 2022,
state = "TX"
)
packageVersion("tidycensus")
library(tidycensus)
place_shift <- get_estimates(
geography = "place",
variables = "NPOPCHG",
year = 2022,
state = "TX",
time_series = TRUE
)
library(tidycensus)
place_shift <- get_estimates(
geography = "place",
variables = "POPESTIMATE",
year = 2022,
state = "TX",
time_series = TRUE
)
View(place_shift)
install.packages("duckdb")
remotes::install_github("walkerke/mapboxapi")
library(sf)
ex <- st_read("../web-map-sample-va/data/final.20220427.geojson")
ex
install.packages("bslib")
library(htmltools)
library(htmltools)
shinyWidgets::chooseSliderSkin()
?shinyWidgets::chooseSliderSkin
library(leaflet)
library(shiny); runApp('apps/zoning_app.R')
runApp('apps/zoning_app.R')
install.packages("tidycensus")
for (i in 1:100) {
install.packages("tidycensus")
}
cranlogs::cran_downloads("tidycensus", "last-month")
install.packages("cranlogs")
cranlogs::cran_downloads("tidycensus", "last-month")
library(tidycensus)
get_decennial(
geography = "congressional district",
variables = "P1_001N",
year = 2020,
sumfile = "cd118"
)
