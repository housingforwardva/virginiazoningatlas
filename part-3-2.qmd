# Northern Virginia’s Land Use Restrictions in Context {part-3-2}

```{r}
#| label: setup

library(tidyverse)
library(tidycensus)
library(ggplot2)
library(ggiraph)
library(sf)
library(leaflet)
library(FinCal)
library(hdatools)
library(scales)
library(forcats)
library(kableExtra)
library(ggtext)
library(patchwork)
library(forcats)
library(fredr)
# Summarize the key findings from the analysis below.

# Describe the housing market in relation to population growth and household trends in the region. 

# Is the population growing or snovainking? What is the typical household size?
# Are we building the housing to match the growth and typical household?

# Describe economic trends in the region.

# Is there job growth in the region? Are incomes and wages growing or declining?
# What can the typical renter afford to buy or rent?
# What can the top occupations afford to buy or rent?

# Describe zoning's impact in Hampton Roads.

# How much of zoned land in Hampton Roads is dedicated to single-family housing only (% of total acres)? Total and by locality. Ranked.
# How much of zoned land in Hampton Roads is primarily residential, mixed with residential, and nonresidential (% of total acres)? Total and by locality. Ranked.
# How much of zoned land in Hampton Roads allows for 2+ family by-right (% of total acres)?
# Housing type by-right by locality
# Where are there minimum square footage requirements?
# How much of zoned land in Hampton Roads allows for ADUs by-right?
# What is the average minimum lot acres for each treatment?


```

In the following section we describe Northern Virginia’s housing market under these land use rules and compare Northern Virginia to peer regions.

While land-use regulations across Northern Virginia limit housing construction and drive up its costs, the commonwealth’s population is growing faster than the U.S. as a whole. Relative to some high-demand parts of the country, Virginia’s regulatory burden is lighter. The slowest growing jurisdiction (Fairfax County) grew 5.23% from 2010 to 2022, the median jurisdiction (Manassas) grew 12.75%, and the fastest growing jurisdiction (Loudoun County) grew 38.35%. As a point of comparison, California grew only 4.6% over this time period and has lost population in the most recent years as land use regulations have prevented new construction in the face of high house prices.

```{r}
#| label: fig-nova-city-pop
#| fig-cap: "Population Growth across Northern Virginia from 2010 to 2022"

# Create a visualization that shows population change in the region by city. What localities are seeing the most growth? Which ones are seeing decline?

# nova_pop <- read_rds("data/nova/nova_pop.rds") |> 
#   mutate(year = as.numeric(year)) |> 
#   filter(year >= 2010) |> 
#   group_by(name_long) |>
#   mutate(diff = value - lag(value),
#          diff = replace_na(diff, 0)) |> 
#   mutate(run_diff = cumsum(diff))|>  
#   filter(run_diff != 0) |> 
#   mutate(year = as.character(year)) |> 
#   mutate(type = case_when(
#     str_detect(name_long, "City") ~ "City",
#     TRUE ~ "County"
#   )) |> 
#   filter(year == 2022)

nova_pop_total <- read_rds("data/nova/nova_pop.rds") |> # Load in population data for Northern Virginia.
  mutate(year = as.numeric(year)) |> # Convert the year column to a number instead of character.
  filter(year == 2010 | year == 2022) |> # Filter for earliest and latest year.
  select(name_long, year, value) |> # Select only needed fields.
  pivot_wider(names_from = year, 
              values_from = value) |> 
  mutate(total_2010 = sum(`2010`),
         total_2022 = sum(`2022`)) |> 
  mutate(change = total_2022 - total_2010) |> # Calculate change in population for entire region.
  mutate(pchg = change/total_2010) |> # Calculate percent change in population for entire region.
  mutate(lpchg = (`2022` - `2010`)/`2010`) |> # Calculate percent change for each locality.
  mutate(name_long = str_remove(name_long, " City")) |> # Remove " City" from each locality.
  mutate(name_long = case_when( # Add back in City to James City County.
    name_long == "Fairfax" ~ "Fairfax City",
    TRUE ~ name_long
  ))
         
ggplot(nova_pop_total, # Read in the data.
                  aes(x = reorder(name_long, lpchg), # Plot the x-axis.
                      y = lpchg, # Plot the y-axis.
                      fill = lpchg)) + # Set the variable that will be colored.
  geom_col(position = "dodge") + # Set as a bar chart. 
  geom_text(aes(label = percent(lpchg, 2), hjust = ifelse(lpchg >= 0, 0, 1), color = lpchg)) +
  coord_flip() +
  theme_hfv() + # Apply custom HFV theme.
  add_zero_line("y") + # Add darker zero intercept line for emphasis.
  labs(subtitle = "From 2010 to 2022",
       caption = "**Source:** U.S. Census Bureau, Population Estimates Program (PEP).") +
  scale_y_continuous(label = percent_format(), expand = expansion(mult = c(0, 0.1))) + 
  scale_fill_gradientn(colours = c("#ADDCB1", "#46A88F", "#207A88", "#0F1A4E")) +
  scale_color_gradientn(colours = c("#ADDCB1", "#46A88F", "#207A88", "#0F1A4E"))

```

In spite of Virginia’s relative accommodation of population growth, house prices have increased here as well. Between 2019 and 2023, the greater D.C. area saw an increase of roughly 13% after adjusting for inflation. Out of 9 jurisdictions, only 2, Arlington County and Falls Church, saw a decline in the median sale price during this time period.

```{r}
#| label: fig-nova-price
#| fig-cap: "Median home sales price in Northern Virginia"

# What have home prices been like?

# How to add arrows indicating direction on line segments??

nova_var_price <- read_rds("data/nova/nova_var.rds") |> 
  select(geography, period, name, adj_price) |> 
  mutate(year = substr(period, 1, 4)) |> 
  mutate(year = as.numeric(year)) |> 
  filter(period == "2023 Q2" | period == "2019 Q2") |> 
  mutate(period = as.character(period)) |> 
  select(geography, name, adj_price, period) |> 
  pivot_wider(names_from = period, 
              values_from = adj_price) |> 
  mutate(latest = `2023 Q2`) |> 
  pivot_longer(3:4,
               names_to = "period",
               values_to = "med_price") |> 
  mutate(name = case_when(
    name == "Virginia Beach-Norfolk-Newport News MSA" ~ "VB-Norfolk-NN MSA",
    TRUE ~ name
  )) |> 
  mutate(name = str_remove(name, " City"))  |> 
  mutate(name = case_when(
    name == "Fairfax" ~ "Fairfax City",
    TRUE ~ name
  ))
  
subtitle_text <- "In <span style = 'color:#011E41'><b>Q2 2019</b></span> and <span style = 'color:#40C0C0'><b>Q2 2023</span>"


price_plot <- ggplot(nova_var_price,
       aes(x = reorder(name, latest),
           y = med_price,
           color  = period)) +
  theme_hfv() +
  geom_line(linewidth = 1, color = "grey") +
  geom_point_interactive(aes(
           data_id = med_price,
           tooltip = dollar_format()(med_price))) +
  geom_text(data = subset(nova_var_price, 
                          name %in% c("Washington MSA")),
            aes(label = dollar(med_price),
                hjust = ifelse(period == "2023 Q2", -0.25, 1.25)), 
            size = 3) +
  coord_flip() +
  labs(title = "Median home sales price in Northern Virginia",
       subtitle = subtitle_text,
       caption = "**Source:** Virginia REALTORS, adjusted to Q2 2023 dollars.") +
  scale_y_continuous(labels = dollar_format(), limits = c(300000, 1100000)) +
  scale_color_hfv() +
  plot_annotation(
    theme = theme(
    plot.subtitle = element_markdown(
       margin = margin(b = 0.4, unit = 'cm'),
        size = 11.5
    ))) + 
  theme(panel.grid.major.y = element_line(color = "white"),
        panel.grid.major.x = element_line(color = "#dadada",size = 0.2))
  
girafe(ggobj = price_plot,
       height_svg = 4)

```

Since 2010, average rents in Northern Virginia have climbed almost \$200 after adjusting for inflation; the vacancy rate has been consistently lower than the national rate, with an exception for the depths of the pandemic.

```{r}
#| label: fig-nova-rent
#| fig-cap: "Average asking rent in Northern Virginia"

# What has rent been like in Northern Virginia?

nova_rent <- read_rds("data/nova/rds/nova_costar.rds") |> 
  select(period, rent, adj_price) |> 
  mutate(quarters = as.yearqtr(period)) |> 
  pivot_longer(2:3,
               names_to = "rent",
               values_to = "dollars") |> 
  filter(rent == "adj_price")

subtitle_text <- "In <span style = 'color:#011E41'><b>Q4 2023 dollars</b></span>"

rent_plot <- ggplot(nova_rent,
       aes(x = quarters,
           y = dollars,
           color = rent,
           linetype = rent)) +
  geom_line() +
  geom_point_interactive(aes(
    data_id = dollars,
    tooltip = dollar_format()(dollars)
  )) +
  theme_hfv() +
  scale_y_continuous(labels = dollar_format()) +
  scale_x_yearqtr(breaks = seq(from = min(nova_rent$quarters), 
                               to = max(nova_rent$quarters), 
                               by = 1),format = '%Y-Q%q') +
  theme(axis.text.x = element_text(angle = 90)) +
  labs(subtitle = subtitle_text,
       caption = "**Source:** CoStar Group, Inc.") +
  scale_color_hfv()  +
  plot_annotation(
    theme = theme(
    plot.subtitle = element_markdown(
       margin = margin(b = 0.4, unit = 'cm'),
        size = 11.5
    ))) +
  scale_x_yearqtr(breaks = seq(from = min(nova_rent$quarters), 
                               to = max(nova_rent$quarters), 
                               by = 1),format = '%Y') +
  labs(subtitle = subtitle_text) + 
  scale_color_hfv()  +
  theme(panel.grid.major.y = element_line(color = "#dadada",size = 0.1),
        panel.grid.major.x = element_line(color = "#dadada",size = 0.1),
        axis.text.x = element_text(angle = 90))

girafe(ggobj = rent_plot,
       height_svg = 4)

```

```{r}
#| label: fig-nova-rv
#| fig-cap: "Rental Vacancy Rate in Northern Virginia from 2010 to 2023"


# What has rental vacancy been like?

nova_rv <- read_rds("data/nova/nova_costar.rds") |> 
  select(period, vacancy_rate) |> 
  mutate(quarters = as.yearqtr(period))

vacancy_plot <- ggplot(nova_rv,
       aes(x = quarters,
           y = vacancy_rate,
           color = vacancy_rate)) +
  geom_line() +
  geom_point_interactive(aes(
    data_id = vacancy_rate,
    tooltip = percent_format(accuracy = 0.01)(vacancy_rate)
  )) +
  theme_hfv() +
  scale_y_continuous(labels = percent_format()) +
  scale_x_yearqtr(breaks = seq(from = min(nova_rv$quarters), to = max(nova_rv$quarters), by = 1),
                  format = '%Y-Q%q') +
  theme(axis.text.x = element_text(angle = 90)) +
  labs(caption = "**Source:** CoStar Group, Inc.") + 
  scale_color_gradientn(colours = c("#ADDCB1", "#46A88F", "#207A88", "#0F1A4E"))

girafe(ggobj = vacancy_plot,
       height_svg = 4)

```

Across the country, local governments use similar types of rules to restrict housing construction, but the extent of these restrictions varies widely. The substantial affordability challenges caused by land use regulations in Northern Virginia and the DC area notwithstanding, this region is more open to housing construction than other metropolitan coastal regions. For example, during the construction of rail transit in Arlington, the county upzoned nearby areas, allowing for more multifamily construction.[^part-3-2-1] Fairfax County adopted a transit-oriented development plan in Tysons, allowing a large increase in multifamily construction. Loudoun County is the region’s fastest growing municipality due in large part to greenfield construction, but its growth includes substantial townhouse and multifamily construction as well as detached single-family construction.

[^part-3-2-1]: Emily Hamilton, “How DC Densified,” Works in Progress, May 23, 2023. <https://worksinprogress.co/issue/how-dc-densified/>

In contrast, the suburbs of other high-income coastal regions such as the Bay Area, Boston, Los Angeles, and New York City have allowed much less multifamily construction. Some of Boston’s suburbs lie in New Hampshire, a state with a completed zoning atlas. 93% of New Hampshire’s developable land is restricted to exclusively detached single-family zoning, compared to 71% in Northern Virginia. In New Hampshire, single-family houses on lots less than one acre are only allowed on 15% of developable land, while 75% of Northern Virginia districts that allow for residential construction have a plausible minimum lot size requirement of less than one acre.

The price of housing in the Northern Virginia area is above the national average, but the D.C. metropolitan area is far less expensive than comparable regions that permit less housing construction. Since the turn of the millennium, while D.C.’s prices have been between 47% and 115% higher than national prices, Boston’s have been 77% to 118% higher, New York’s 80% to 140%, Los Angeles’ prices 85% to 192% higher, and San Francisco’s 141% to 309% higher. As our atlas data shows, policymakers in Northern Virginia have ample opportunities to reduce the barrier of local land use regulations. However, the problems caused by housing supply constraints are more severe in more heavily regulated peer regions.

```{r}
#| label: fig-natl-prices
#| fig-cap: "Median Home Values in Select High-Income Coastal Regions as a Multiple of the U.S. Median"


city_names <- c("United States", 
                "Washington, DC", 
                "New York, NY", 
                "Los Angeles, CA", 
                "San Francisco, CA", 
                "Boston, MA")

metro_prices <- metro_prices |>
  filter(RegionName %in% city_names)

metro_prices <- metro_prices %>%
  gather(key = "Date", value = "Price", -c(RegionID, RegionName, RegionType, StateName, SizeRank))

metro_prices$Date <- as.Date(metro_prices$Date)

metro_prices <- metro_prices %>%
  group_by(Date) %>%
  mutate(relative_price = Price / Price[RegionName == "United States"]) %>%
  ungroup()

order_region <- metro_prices %>%
  group_by(RegionName) %>%
  summarise(last_relative_price = last(relative_price)) %>%
  arrange(desc(last_relative_price)) %>%
  pull(RegionName)

metro_prices$RegionName <- factor(metro_prices$RegionName, levels = order_region)

metro_prices_img <- ggplot(metro_prices,
                           aes(x = Date,
                               y = relative_price,
                               group = RegionName,
                               color = RegionName)) +
  geom_line() +
  geom_line(data = filter(metro_prices, RegionName == "Washington, DC"), 
            aes(x = Date, y = relative_price), 
            size = 1.5) + 
  scale_color_hfv() +
  scale_x_date(breaks = "4 years",
               date_labels = "%Y") +
  theme_hfv() +
  theme(axis.title.x = element_blank(),
        axis.title.y = element_blank(),
        legend.position = "right")

metro_prices_img



```

## Conclusion

The NZA data provides an important new tool for advocates of zoning reform and opens up new opportunities for researchers to study the effects of specific zoning rules and combinations of rules. We find that in spite of high demand to live in Northern Virginia, a majority of the land cannot be developed with more than one detached housing unit and requirements for large lots are pervasive. Nonetheless, we can see in many peer regions of the country, barriers to housing construction are higher, corresponding with more severe affordability problems. Northern Virginia already has a successful blueprint for reforming exclusionary zoning with examples like Arlington’s transit corridors. The zoning atlas provides details on the rules that are facilitating construction across the region, pointing to reforms that could address the housing shortage in the large parts of the region where development is currently locked out.

```{r}
#| label: tbl-nova-zoning-summary
#| tbl-cap: "Summary of zoning ordinances in Northern Virginia"

# Read in csv of zoning summary for Northern Virginia.

nova_zoning_summary <- read_csv("data/nova/csv/nova_zoning_summary.csv")

nova_zoning_summary |> 
  kbl(col.names = c("Jurisdiction", "County or equivalent", "Government Type", "Date of Zoning Ordinance", "Number of Pages", "Number of base and overlay districts"), align = "lllccc") |> 
  kable_styling(bootstrap_options = c("striped", "condensed"))

```

```{r}
#| label: fig-sfd-map
#| fig-cap: "Single-family detached only zoning in Northern Virginia"

# Create a map that shows where single-family detached only housing districts are in the region.


vza_pal <- colorFactor(palette =c("#8B85CA", "#40C0C0", "#011E41"),
                       levels = c("Primarily Residential", "Mixed with Residential", "Nonresidential"))

nova_sfd_map <- read_rds("data/nova/rds/nova_sfd_only_map.rds")

leaflet() |>
  addProviderTiles(providers$CartoDB.Positron) |> 
  addPolygons(data = nova_sfd_map,
              color = ~vza_pal(type),
              weight = 1,
              fillOpacity = 0.80,
              popup = paste0("Jurisdiction: ", nova_sfd_map$jurisdiction,
                             "<br>",
                             "District Abbreviation: ", nova_sfd_map$abbrvname)) |>
  addLegend(labels = c("Primarily Residential", "Mixed with Residential", "Nonresidential"),
            colors = c("#8B85CA", "#40C0C0", "#011E41"),
            title = "Type of Zoning District")


```

```{r}
#| label: fig-sfd-bar
#| fig-cap: "Percent of developable land dedicated to single-family detached only"

# Create a bar char that shows the percentage of zoned in each locality that is dedicated to single-family detached only housing.

nova_sfd <- read_rds("data/nova/rds/nova_vza_nogeo.rds") |> # Read in the data.
  select(jurisdiction, overlay, sfd, acres) |> # Select necessary data fields.
  filter(overlay == 0) |> # Remove overlay districts.
  group_by(jurisdiction, sfd) |> # Sum the total acres dedicated to single-family detached in each district.
  summarise(acres = sum(acres)) |> 
  group_by(jurisdiction) |> 
  mutate(percent = acres/sum(acres)) |> 
  ungroup() |> 
  mutate(total_nova = sum(acres)) |> # Calculate what percentage of total developable acres is SFD.
  filter(sfd == "t") |> 
  add_row(jurisdiction = "Haymarket", sfd = "t", "acres" = 0, percent = 0, total_nova = 658342.5) 

write_csv(nova_sfd, "data/nova/csv/nova_sfd.csv")

nova_sfd_summary <- nova_sfd |> 
  group_by(total_nova) |> 
  summarise(total_sfd = sum(acres)) |> 
  mutate(pct = total_sfd/total_nova)


ggplot(nova_sfd,
       aes(x = reorder(jurisdiction, percent),
           y = percent,
           fill = percent)) +
  geom_col(position = "dodge") +
  geom_col_interactive(position = "dodge") +
  geom_text(aes(label = percent(percent, 1), color = percent),
    hjust = -0.2) +
  theme_hfv() +
  coord_flip() +
  scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +
  scale_fill_gradientn(colours = c("#ADDCB1", "#46A88F", "#207A88", "#0F1A4E")) + # Use custom HFV gradient.
  scale_color_gradientn(colours = c("#ADDCB1", "#46A88F", "#207A88", "#0F1A4E")) + # Use custom HFV gradient.
  labs(title = "Percent of developable land dedicated to single-family detached only",
       caption = "**Source:** Mercatus Center at George Mason University & HousingForward Virginia, Virginia Zoning Atlas.") +
  theme(axis.text.x = element_blank())


```

```{r}
#| label: tbl-nova-byright
#| tbl-cap: "Percent of developable land that welcomes housing type by-right"

# Create a table that shows the percentage of land that allows for each type of treatment by locality
# https://frontierinstitute.org/reports/the-montana-zoning-atlas-2-0/ use this as an example 

nova_byright_tbl <- read_rds("data/nova/rds/nova_vza_nogeo.rds") |> 
  select(jurisdiction, abbrvname, overlay, 6:9, acres) |> 
  filter(overlay == 0) |>
  group_by(jurisdiction) |> 
  mutate(total_acres = sum(acres)) |> 
  mutate(family1_pct = case_when(
    family1_treatment == "allowed" ~ acres/total_acres,
    TRUE ~ 0
  ))|> 
  mutate(family2_pct = case_when(
    family2_treatment == "allowed" ~ acres/total_acres,
    TRUE ~ 0 
  )) |> 
  mutate(family3_pct = case_when(
    family3_treatment == "allowed" ~ acres/total_acres,
    TRUE ~ 0 
  )) |> 
  mutate(family4_pct = case_when(
    family4_treatment == "allowed" ~ acres/total_acres,
    TRUE ~ 0 
  )) |> 
  group_by(jurisdiction) |> 
  summarise(family1_byright = percent(sum(family1_pct)),
            family2_byright = percent(sum(family2_pct)),
            family3_byright = percent(sum(family3_pct)),
            family4_byright = percent(sum(family4_pct))
            ) |> 
  filter(jurisdiction != "Quantico")

write_csv(nova_byright_tbl, "data/nova/csv/nova_byright_table.csv")

nova_byright_tbl |>
  kable(col.names = c("Jurisdiction", "Single-family", "2-family", "3-family", "4+-family"), 
        align = "lcccc") |> 
  kable_styling(bootstrap_options = c("striped", "condensed"))

```

```{r}
#| label: fig-2plus
#| fig-cap: "Percent of developable land allowing for 2+ family housing by-right" 

# Create a bar graph that shows the total amount of zoned land that welcomes 2+ family housing by-right

nova_byright <- read_rds("data/nova/rds/nova_vza_nogeo.rds") |> 
  select(jurisdiction, abbrvname, overlay, 6:9, acres) |> # Select data fields.
  filter(overlay == 0) |> # Filter out overlay districts.
  group_by(jurisdiction) |> 
  mutate(total_acres = sum(acres)) |> # Calculate the total acres of zoned land.
  filter(family2_treatment == "allowed" & family3_treatment == "allowed" & family4_treatment == "allowed") |> 
  group_by(jurisdiction) |> 
  mutate(pct_2plus = acres/total_acres) |> 
  group_by(jurisdiction) |> 
  summarise(pct_2plus = sum(pct_2plus)) |> 
  add_row(jurisdiction = "Clifton", pct_2plus = 0) |> 
  add_row(jurisdiction = "Hamilton", pct_2plus = 0) 


nova_byright_summary <- read_rds("data/nova/rds/nova_vza_nogeo.rds") |> 
  select(jurisdiction, abbrvname, overlay, 6:9, acres) |> # Select data fields.
  filter(overlay == 0) |> # Filter out overlay districts.
  mutate(total_acres = sum(acres)) |> # Calculate the total acres of zoned land.
  filter(family2_treatment == "allowed" & family3_treatment == "allowed" & family4_treatment == "allowed") |> 
  mutate(total_2plus = sum(acres)) |> 
  mutate(pct2plus = total_2plus/total_acres)

write_csv(nova_byright, "data/nova/csv/nova_byright_2plus.csv")

ggplot(nova_byright,
       aes(x = reorder(jurisdiction, pct_2plus),
           y = pct_2plus,
           fill = pct_2plus)) +
  geom_col() +
  geom_text(aes(label = percent(pct_2plus, 1), color = pct_2plus),
    hjust = -0.2) +
  coord_flip() +
  theme_hfv() +
  scale_fill_gradientn(colours = c("#ADDCB1", "#46A88F", "#207A88", "#0F1A4E")) + # Use custom HFV gradient.
  scale_color_gradientn(colours = c("#ADDCB1", "#46A88F", "#207A88", "#0F1A4E")) + # Use custom HFV gradient.
  scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +
  labs(title = "Percent of developable land allowing for 2+ family housing by-right",
       caption = "**Source:** Mercatus Center at George Mason University & HousingForward Virginia, Virginia Zoning Atlas.")  +
  theme(axis.text.x = element_blank())




```

The map below shows the location of zoning districts that allow for 2+ family by-right.

```{r}
#| label: fig-byr2-map
#| fig-cap: "Developable land zoned for 2+ family housing by-right"

# Create a map that shows where 2 + family housing is allowed by-right in the region.

pal <- colorFactor(palette =c("#8B85CA", "#40C0C0"),levels = c("Primarily Residential", "Mixed with Residential"))

nova_byr2 <- read_rds("data/nova/rds/byr_map.rds")

nova_byr2 |> 
  addProviderTiles(providers$CartoDB.Positron)

```

```{r}
#| label: fig-4plus
#| fig-cap: "Percent of developable land allowing for 4+ family housing by-right" 

# Create a bar graph that shows the total amount of zoned land that welcomes 2+ family housing by-right

nova_byright <- read_rds("data/nova/rds/nova_vza_nogeo.rds") |> 
  select(jurisdiction, abbrvname, overlay, 6:9, acres) |> # Select data fields.
  filter(overlay == 0) |> # Filter out overlay districts.
  filter(acres != 0) |> 
  group_by(jurisdiction) |> 
  mutate(total_acres = sum(acres)) |> # Calculate the total acres of zoned land.
  filter(family4_treatment == "allowed") |> 
  group_by(jurisdiction) |> 
  mutate(pct_4plus = acres/total_acres) |> 
  group_by(jurisdiction) |> 
  summarise(pct_4plus = sum(pct_4plus)) |> 
  add_row(jurisdiction = "Clifton", pct_4plus = 0) |> 
  add_row(jurisdiction = "Hamilton", pct_4plus = 0) 

write_csv(nova_byright, "data/nova/csv/nova_byright_4plus.csv")

nova_byright_summary <- read_rds("data/nova/rds/nova_vza_nogeo.rds") |> 
  select(jurisdiction, abbrvname, overlay, 6:9, acres) |> # Select data fields.
  filter(overlay == 0) |> # Filter out overlay districts.
  mutate(total_acres = sum(acres)) |> # Calculate the total acres of zoned land.
  filter(family4_treatment == "allowed") |> 
  mutate(total_4plus = sum(acres)) |> 
  mutate(pct4plus = total_4plus/total_acres)



ggplot(nova_byright,
       aes(x = reorder(jurisdiction, pct_4plus),
           y = pct_4plus,
           fill = pct_4plus)) +
  geom_col() +
  geom_text(aes(label = percent(pct_4plus, 1), color = pct_4plus),
    hjust = -0.2) +
  coord_flip() +
  theme_hfv() +
  scale_fill_gradientn(colours = c("#ADDCB1", "#46A88F", "#207A88", "#0F1A4E")) + # Use custom HFV gradient.
  scale_color_gradientn(colours = c("#ADDCB1", "#46A88F", "#207A88", "#0F1A4E")) + # Use custom HFV gradient.
  scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +
  labs(title = "Percent of developable land allowing for 4+ family housing by-right",
       caption = "**Source:** Mercatus Center at George Mason University & HousingForward Virginia, Virginia Zoning Atlas.")+
  theme(axis.text.x = element_blank())


```

## Other requirements

```{r}

# Summarize some key requirements.

# Minimum parking requirements for 4+ family in each locality


```

### Minimum dwelling square footage

### Parking minimums

The table below shows minimum parking requirements for multifamily housing developments of 4 or more units in each Hampton Roads locality:

```{r}
#| label: tbl-min-parking
#| tbl-cap: "Minimum parking requirements for 'multifamily' housing in Hampton Roads"

nova_parking <- read_csv("data/nova/csv/nova_vza_parking.csv")

nova_parking |> 
  kbl(col.names = c("Jurisdiction", "1-Bedroom", "2-Bedroom", "3-Bedroom", "Vistor Space/Unit"),
      align = "lcccc") |> 
  kable_styling(bootstrap_options = c("striped", "condensed"))

```

## Accessory dwelling units

Accessory dwelling units (ADUs) have been a growing interest among homeowners as they look for ways to increase income, house a family member with special needs, or simply make their home more functional for their family.

::: callout-caution
## About ADUs in the methodology!

Remember that the National Zoning Atlas Methodology includes caretaker or watchman's quarters associated with a nonresidential use. It also includes a single dwelling above a commercial or retail use.
:::

```{r}
#| label: fig-nova-adus
#| fig-cap: "Percent of developable land that allows for ADUs by-right"

# Create a table that shows the percentage of land that allows for ADUs by-right
# https://frontierinstitute.org/reports/the-montana-zoning-atlas-2-0/ use this as an example 

nova_adu <- read_rds("data/nova/rds/nova_vza_nogeo.rds") |> 
  select(jurisdiction, overlay, accessory_treatment, acres) |> 
  filter(overlay == 0) |> 
  group_by(jurisdiction) |> 
  mutate(total_acres = sum(acres)) |> 
  filter(accessory_treatment == "allowed") |> 
  group_by(jurisdiction, total_acres)  |> 
  summarise(acres = sum(acres)) |> 
  mutate(pct = acres/total_acres) |> 
  ungroup() |> 
  filter(jurisdiction != "Quantico") |> 
  add_row(jurisdiction = "Clifton", total_acres = 0, acres = 0, pct = 0) 


write_csv(nova_adu, "data/nova/nova_adu.csv")


ggplot(nova_adu,
       aes(x = reorder(jurisdiction, pct),
           y = pct,
           fill = pct)) +
  geom_col() +
  geom_text(aes(label = percent(pct, accuracy = 0.1), color = pct, hjust = -0.2)) +
  coord_flip() +
  theme_hfv() +
  labs(title = "Percent of developable land allowing for ADUs by-right",
       caption = "**Source:** HousingForward Virginia, Virginia Zoning Atlas.")  +
  scale_y_continuous(labels = percent_format(), expand = expansion(mult = c(0, 0.15))) +
  scale_fill_gradientn(colours = c("#ADDCB1", "#46A88F", "#207A88", "#0F1A4E")) + # Use custom HFV gradient.
  scale_color_gradientn(colours = c("#ADDCB1", "#46A88F", "#207A88", "#0F1A4E")) + # Use custom HFV gradient.
  theme(axis.text.x = element_blank())
  

```



```{r}
#| label: fig-nova-adus-exc
#| fig-cap: "Percent of developable land that allows for ADUs by-right, excluding Mixed with Residential and Nonresidential"

# Create a table that shows the percentage of land that allows for ADUs by-right
# https://frontierinstitute.org/reports/the-montana-zoning-atlas-2-0/ use this as an example 

nova_adu <- read_rds("data/nova/rds/nova_vza_nogeo.rds") |> 
  select(type, jurisdiction, overlay, accessory_treatment, acres) |> 
  filter(overlay == 0) |> 
  group_by(jurisdiction) |> 
  mutate(total_acres = sum(acres)) |> 
  filter(accessory_treatment == "allowed") |> 
  group_by(jurisdiction, type, total_acres)  |> 
  summarise(acres = sum(acres)) |> 
  mutate(pct = acres/total_acres) |> 
  ungroup() |>
  filter(type == "Primarily Residential") 

write_csv(nova_adu, "data/nova/nova_adu_primary_res.csv")

ggplot(nova_adu,
       aes(x = reorder(jurisdiction, pct),
           y = pct,
           fill = pct)) +
  geom_col() +
  geom_text(aes(label = percent(pct, accuracy = 0.1), color = pct, hjust = -0.2)) +
  coord_flip() +
  theme_hfv() +
  labs(title = "Percent of developable land allowing for ADUs by-right in Primarily Residential",
       caption = "**Source:** HousingForward Virginia, Virginia Zoning Atlas.")  +
  scale_y_continuous(labels = percent_format(), expand = expansion(mult = c(0, 0.1))) +
  scale_fill_gradientn(colours = c("#ADDCB1", "#46A88F", "#207A88", "#0F1A4E")) + # Use custom HFV gradient.
  scale_color_gradientn(colours = c("#ADDCB1", "#46A88F", "#207A88", "#0F1A4E")) + # Use custom HFV gradient.
  theme(axis.text.x = element_blank()) |>
  setView(lng = -77.42, lat = 38.92, zoom = 9.25)
  

```



```{r}
#| label: tbl-nova-adu-restrictions
#| tbl-cap: "Summary of ADU regulations in Hampton Roads"

# Create a table for the following csv.
# https://frontierinstitute.org/reports/the-montana-zoning-atlas-2-0/ use this as an example 

nova_adu_summary <- read_csv("data/nova/csv/nova_adu_summary.csv") |> 
  select(jurisdiction, attached, detached, owner_occupancy, rental_prohibition, elderly_family, admin_permit)

nova_adu_summary |> 
  kable(col.names = c("Jurisdiction", "Attached Allowed", "Detached Allowed", "Owner Occupancy Requirement", "Rental Prohibited", "Elderly or Family Requirement", "Administrative Permit")) |> 
  kable_styling(bootstrap_options = c("striped", "condensed"))

```



```{r}
#| label: fig-adu-map
#| fig-cap: "Land Where Accessory Dwelling Units are allowed by-right in Northern Virginia by Zoning Type"

nova_adu_map <- read_rds("data/nova/rds/nova_adu_map.rds")

pal <- colorFactor(palette =c("#8B85CA", "#40C0C0", "#011E41"),levels = c("R", "M", "X"))

nova_adu_map |> 
  addProviderTiles(providers$CartoDB.Positron) |>
  setView(lng = -77.42, lat = 38.92, zoom = 9.25)

```



```{r}
#| label: fig-transit-map
#| fig-cap: "Northern Virginia transit stops and zoned land allowing for 2+ family housing by-right"

pal <- colorFactor(palette =c("#8B85CA", "#40C0C0"),levels = c("Primarily Residential", "Mixed with Residential"))

transit_pal <-colorFactor(palette = c("#B1005F", "#E0592A"), levels = c("Bus", "Rail"))

nova_transit_map <- read_rds("data/nova/rds/nova_transit_map.rds")

nova_transit_map |> 
  addProviderTiles(providers$CartoDB.Positron)

```


```{r}
#| label: fig-by4-jhf
#| fig-cap: "Zoning districts allowing for 4+ family by-right and Census Block Groups with a Jobs-Housing Fit above 2.0"

housing_needed <- read_rds("data/nova/rds/nova_blk_grps.rds") |> 
  filter(ratio > 2 | is.na(ratio))

pal <- colorFactor(palette =c("#8B85CA", "#40C0C0"),levels = c("Primarily Residential", "Mixed with Residential"))

nova_byr4 <- read_rds("data/nova/rds/byr4_map.rds") 

fit_map <- nova_byr4 |> 
  addPolygons(data = housing_needed,
              fillColor = "#66788d",
              fillOpacity = 0.5,
              color = "white",
              weight = 1,
              popup = paste0(
                "Jurisdiction: ",
                housing_needed$name_long,
                "<br>",
                "Ratio: ", housing_needed$label),
              group = "Jobs-Housing Fit Ratio") |> 
  addLegend(data = housing_needed,
            position = "topright",
            colors = "#66788d",
            labels = "Ratio > 2 or NA")

fit_map |> 
  addProviderTiles(providers$CartoDB.Positron)
```

