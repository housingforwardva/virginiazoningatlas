# Zoning in Hampton Roads {part-2-2}

```{r}

# Summarize the key findings from the analysis below.

# Describe the housing market in relation to population growth and household trends in the region. 

# Is the population growing or shrinking? What is the typical household size?
# Are we building the housing to match the growth and typical household?

# Describe economic trends in the region.

# Is there job growth in the region? Are incomes and wages growing or declining?
# What can the typical renter afford to buy or rent?
# What can the top occupations afford to buy or rent?

# Describe zoning's impact in Hampton Roads.

# How much of zoned land in Hampton Roads is dedicated to single-family housing only (% of total area)? Total and by locality. Ranked.
# How much of zoned land in Hampton Roads is primarily residential, mixed with residential, and nonresidential (% of total area)? Total and by locality. Ranked.
# How much of zoned land in Hampton Roads allows for 2+ family by-right (% of total area)?
# Housing type by-right by locality
# Where are there minimum square footage requirements?
# How much of zoned land in Hampton Roads allows for ADUs by-right?
# What is the average minimum lot area for each treatment?


```

```{r}
#| label: setup

library(tidyverse)
library(tidycensus)
library(ggplot2)
library(ggiraph)
library(sf)
library(leaflet)
library(FinCal)
library(hdatools)
library(scales)
library(forcats)
library(kableExtra)
library(ggtext)

```

## Key Findings




## Housing Market

```{r}
#| label: fig-hr-city-pop
#| fig-cap: "Population change in the Hampton Roads region"

# Create a visualization that shows population change in the region by city. What localities are seeing the most growth? Which ones are seeing decline?

hr_pop <- read_rds("data/hr/hr_pop.rds") |> 
  mutate(year = as.numeric(year)) |> 
  filter(year >= 2010) |> 
  group_by(name_long) |>
  mutate(diff = value - lag(value),
         diff = replace_na(diff, 0)) |> 
  mutate(run_diff = cumsum(diff))|>  
  filter(run_diff != 0) |> 
  mutate(year = as.character(year)) |> 
  mutate(type = case_when(
    str_detect(name_long, "City") ~ "City",
    TRUE ~ "County"
  )) |> 
  filter(year == 2022)


pop_bar <- ggplot(hr_pop, # Read in the data.
                  aes(x = reorder(name_long, run_diff), # Plot the x-axis.
                      y = run_diff, # Plot the y-axis.
                      fill = name_long, # Set the variable that will be colored.
                      data_id = run_diff, # Set the variable that will be used in interactive plot.
                      tooltip = label_comma()(run_diff))) + # Set the format of the data label on hover.
  geom_col(position = "dodge") + # Set as a bar chart. 
  geom_col_interactive(position = "dodge") + # Add interactive geometry for ggiraph widget.
  coord_flip() +
  theme_hfv() + # Apply custom HFV theme.
  add_zero_line("y") + # Add darker zero intercept line for emphasis.
  labs(title = "Population change in the Hampton Roads region",
       subtitle = "From 2010 to 2022",
       caption = "**Source:** U.S. Census Bureau, Population Estimates Program (PEP).") +
  scale_y_continuous(label = label_comma()) # Format the y-axis to show commas.

pop_bar

```


```{r}
#| label: household-size-data
#| fig-cap: "Change in household size by tenure in Hampton Roads"

# Create a visualization that shows the change in household size from 2010 to 2021 in each locality. Describe the trend in household size changes. Where are larger households seeing growth? Smaller households?

hr_hhsize <- read_rds("data/hr/hr_hhsize.rds") |> 
  group_by(NAME, year, size) |> 
  summarise(estimate = sum(estimate)) |> 
  filter(year == 2010 | year == 2021) |> 
  mutate(year = as.character(year)) |> 
  pivot_wider(names_from = year,
              values_from = estimate) |> 
  mutate(change = `2021` - `2010`) |> 
  group_by(NAME) |> 
  mutate(total_chg = sum(change)) |> 
  mutate(NAME = str_remove_all(NAME, " city"))
  
  
ggplot(hr_hhsize,
       aes(x = reorder(NAME, total_chg),
           y = change,
           fill = size)) +
  geom_col(position = "stack") +
  theme_hfv() +
  coord_flip() +
  facet_wrap(~size, nrow =1) +
  scale_fill_hfv() +
  labs(title = "Change in household size in Hampton Roads",
       caption = "**Source:** U.S. Census Bureau. ACS 5-Year Estimates. Table B25009.") +
  add_zero_line(axis = "y") +
  scale_y_continuous(labels = number_format(big.mark = ",", style_positive = "plus"))



```

```{r}
#| label: fig-bps-hr
#| fig-cap: "Total new residential building permits issued from 2010 to 2022"

# Create a visualization that shows where housing is being built. Where is more diverse housing being built? Where is single-family housing being built the most? How does that compare to population growth in those localities?

hr_bps <- read_rds("data/hr/hr_bps.rds") |> 
  mutate(type = case_when(
    type == "2-units" ~ "2-4 units",
    type == "3-4 units" ~ "2-4 units",
    TRUE ~ type
  )) |> 
  group_by(name_long, type) |> 
  summarise(units = sum(units)) |> 
  group_by(name_long) |> 
  mutate(total = sum(units))

ggplot(hr_bps,
       aes(x = reorder(name_long, total),
           y = units,
           fill = type)) + 
  geom_col(position = "stack") +
  coord_flip() +
  facet_wrap(~type) +
  theme_hfv() + 
  scale_fill_hfv() +
  scale_y_continuous(labels = number_format(big.mark = ",")) +
  labs(title = "Total new residential building permits issued in Hampton Roads",
       subtitle = "From 2010 to 2022",
       caption = "**Source:** U.S. Census Bureau. Building Permits Survey.")




```

```{r}

# What have home prices been like?


```

```{r}

# What has for-sale home supply been like?


```

```{r}
#| label: fig-hr-rent
#| fig-cap: "Average asking rent in Hampton Roads"

# What has rent been like in Hampton Roads?

hr_rent <- read_rds("data/hr/hr_costar.rds")


```

```{r}
#| label: fig-hr-rv
#| fig-cap: "Rental vacancy in Hampton Roads"


# What has rental vacancy been like?

hr_rv <- read_rds("data/hr/hr_costar.rds")



```

## Jobs Market


The importance of affordable housing to a thriving economy cannot be overstated, as it directly impacts various facets of economic well-being. By providing stable living conditions and reducing the financial burden on households, affordable housing enhances workforce productivity and stability, ensuring that employees can live close to their workplaces. This proximity not only reduces commuting times but also supports local businesses and stimulates economic growth. Moreover, affordable housing fosters economic mobility, allowing individuals and families to invest in education, job training, and entrepreneurship, ultimately leading to higher incomes and reduced reliance on social services. Affordable housing is an economic catalyst that promotes financial security, encourages consumer spending, and contributes to a more equitable and thriving economy for all.

A Jobs-Housing Fit ratio helps measure the imbalance between low-wage workers and housing that is affordable to them. For example, a ratio of 5.0 means that five low wage workers compete for every one home considered affordable to them. Ratios closer to 1.0 or 2.0 offer more balance assuming that there is only one worker per household. But keep in mind that these ratios are at the jurisdiction-level.

```{r}
#| label: fig-jobs-housing
#| fig-cap: "Jobs-Housing Fit in Hampton Roads"


# What have employment levels been like? Are jobs declining or growing?

hr_jhf <- read_rds("data/hr/hr_ratio.rds") 

ggplot(hr_jhf,
       aes(x = reorder(name_long, ratio),
           y = ratio,
           fill = ratio)) +
  geom_col(position = "dodge") +
  geom_text(aes(label = round(ratio, 2), color = ratio), hjust = -0.1) +
  coord_flip() + 
  theme_hfv() +
  scale_y_continuous(expand = expansion(mult = c(0, 0.1)))



``` 
Community-level jobs-housing fit is more indicative of the balance as low wage workers can find more stability from jobs that are close to them. Furthermore, jobs in closer proximity help cut down on traffic congestion.

```{r}
#| label: fig-hr-ratio-map
#| fig-cap: "Jobs-Housing Fit Ratio in Hampton Roads by Block Group"

hr_blk_grps <- read_rds("data/hr/hr_blk_grps.rds")

library(RColorBrewer)

rc1 <- colorRampPalette(colors = c("#8B85CA", "#ADDCB1"), space = "Lab")(10)

## Make vector of colors for values larger than 0 (180 colors)
rc2 <- colorRampPalette(colors = c("#ADDCB1", "#011E41"), space = "Lab")(30)

## Combine the two color palettes
rampcols <- c(rc1, rc2)

ratio_bins <- c(0, 0.5, 1, 2, 5, 10, 50, 100, 205)

pal <- colorBin(palette = rampcols, bins = ratio_bins, domain = (hr_blk_grps$ratio))

leaflet(hr_blk_grps,) |> 
  addPolygons(
              fillColor = ~pal(ratio),
              fillOpacity = 0.8,
              color = "white",
              weight = 1,
              popup = paste0(
                "Jurisdiction: ",
                hr_blk_grps$name_long,
                "<br>",
                "Ratio: ", hr_blk_grps$label
              )
              ) |> 
  addTiles() |> 
  addLegend("bottomright", pal = pal, values = ~ratio,
            opacity = 1
  )


```

```{r}
#| label: fig-local-wages
#| fig-cap: "Average annual wages in Hampton Roads"

# Show how current wages compare to wages in 2016 for each locality. Has there been major changes? What can the avg annual wage afford to rent or buy?

hr_wages <- read_rds("data/hr/hr_oews.rds")



```


```{r}
#| label: fig-renter-income
#| fig-cap: "Median renter household income"

# What are renter incomes like? What can a renter afford to rent and buy?

hr_income <- read_rds("data/hr/hr_income.rds")



```

```{r}

# What is cost burden like in the region?

hr_cb <- read_rds("data/hr/hr_cb.rds")


```

## Zoning's impact in Hampton Roads

With increasing housing affordability issues across the region, a diverse and growing supply of housing is needed to meet the needs of a diverse population. Localities have significant control over their supply through their zoning ordinances. 

The following findings are based on the Zoning Atlas Methodology and takes into account the impact of federally-owned lands and wetland areas, which are both prevalent throughout the region. Like our colleagues in New Hampshire, we have sought to exclude areas of land that are not unbuildable. We have excluded all federal land from calculations, as well as area of wetlands and/or water that are 10 continguous area or more.

::: {.callout-note}

*Federal lands* were identified using ESRI Landscape's USA Federal Lands feature layer, which accounted for lands managed by six federal agencies, including: 

- Bureau of Land Management
- Department of Defense
- National Park Service
- US Fish and Wildlife Service
- US Forest Service

*Wetland/water areas* were identified using the U.S. Fish & Wildlife Service's Seamless Wetlands Data. The wetlands polygon was used and allow polygons with an area of 10 acres or more were utilized as a mask layer to clip from our Hampton Roads zoning district layer file.

:::

```{r}
#| label: fig-housing-type
#| fig-cap: "Percent of land zoned by residential category"

# Create a bar char that shows the percentage of zoned in each locality by type (i.e. primarily residential, mixed with residential, nonresidential)

hr_type <- read_rds("data/hr/hr_vza_nogeo.rds") |> 
  select(jurisdiction, overlay, type, area) |> 
  filter(overlay == 0)

hr_type_summary <- hr_type |> 
  group_by(jurisdiction, type) |> 
  summarise(area = sum(area)) |> 
  group_by(jurisdiction) |> 
  mutate(percent = area/sum(area))

ggplot(hr_type_summary,
       aes(x = fct_reorder2(jurisdiction, type, percent),
           y = percent,
           fill = factor(type, levels = c("Nonresidential", "Mixed with Residential", "Primarily Residential")))) +
  geom_col(position = "stack") +
  coord_flip() +
  theme_hfv() +
  scale_fill_hfv() +
  theme(legend.position = "right") +
  labs(title = "Percent of land by type of zoning district",
       caption = "*Source") +
  scale_y_continuous(labels = percent_format(), expand = expansion(mult = c(0, 0.01)))


```

### Single-Family Detached Housing

```{r}

# Create a map that shows where single-family detached only housing districts are in the region.


vza_pal <- colorFactor(palette =c("#8B85CA", "#40C0C0", "#011E41"),
                       levels = c("Primarily Residential", "Mixed with Residential", "Nonresidential"))

hr_sfd_map <- read_rds("data/hr/hr_vza_geo.rds") |>
  filter(sfd == "t")

library(leafgl)
library(sf)

hr_sfd_map <- st_cast(hr_sfd_map, "POLYGON")

zd <- leaflet() |>
  addTiles() |>
  addGlPolygons(data = hr_sfd_map,
              color = ~vza_pal(type),
              weight = 1,
              fillOpacity = 0.75,
              popup = paste0("Jurisdiction: ", hr_sfd_map$jurisdiction,
                             "<br>",
                             "District Abbreviation: ", hr_sfd_map$abbrvname)) |>
  addLegend(labels = c("Primarily Residential", "Mixed with Residential", "Nonresidential"),
            colors = c("#8B85CA", "#40C0C0", "#011E41"),
            title = "Type of Zoning District")

# write_rds(zd, "data/hr/hr_sfd_map.rds")
# 
# hr_sfd_map <- read_rds("data/hr/hr_sfd_map.rds")
# 
# hr_sfd_map |> 
#   addPolygons()


zd
```

```{r}

# Create a bar char that shows the percentage of zoned in each locality that is dedicated to single-family detached only housing.

hr_sfd <- read_rds("data/hr/hr_vza_nogeo.rds") |> # Read in the data.
  select(jurisdiction, overlay, sfd, area) |> # Select necessary data fields.
  filter(overlay == 0) |> # Remove overlay districts.
  group_by(jurisdiction, sfd) |> # Sum the total acres dedicated to single-family detached in each district.
  summarise(area = sum(area)) |> 
  group_by(jurisdiction) |> 
  mutate(percent = area/sum(area)) |> # Calculate what percentage of total developable area is SFD.
  filter(sfd == "t") 



ggplot(hr_sfd,
       aes(x = reorder(jurisdiction, percent),
           y = percent,
           fill = percent)) +
  geom_col(position = "dodge") +
  geom_col_interactive(position = "dodge") +
  geom_text(aes(label = percent(percent, accuracy = 1), color = percent),
    hjust = -0.2) +
  theme_hfv() +
  coord_flip() +
  scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +
  scale_fill_gradientn(colours = c("#ADDCB1", "#46A88F", "#207A88", "#0F1A4E")) + # Use custom HFV gradient.
  scale_color_gradientn(colours = c("#ADDCB1", "#46A88F", "#207A88", "#0F1A4E")) + # Use custom HFV gradient.
  labs(title = "Percent of developable land dedicated to single-family detached only") +
  theme(axis.text.x = element_blank())

```

```{r}



# Read in data frame 
hr_bipoc <- read_rds("data/hr/hr_bipoc.rds") |> 
  st_drop_geometry() |> 
  arrange(name_long) |> 
  mutate(bipoc = percent) |> 
  select(fips, name_long, bipoc)

hr_sfd <- read_rds("data/hr/hr_vza_nogeo.rds") |> # Read in the data.
  select(jurisdiction, overlay, sfd, area) |> # Select necessary data fields.
  filter(overlay == 0) |> # Remove overlay districts.
  mutate(jurisdiction = case_when(
    jurisdiction == "Smithfield" ~ "Isle of Wight",
    jurisdiction == "Windsor" ~ "Isle of Wight", 
    jurisdiction == "Surry (town)" ~ "Surry",
    TRUE ~ jurisdiction
  )) |> 
  group_by(jurisdiction, sfd) |> # Sum the total acres dedicated to single-family detached in each district.
  summarise(area = sum(area)) |> 
  group_by(jurisdiction) |> 
  mutate(percent = area/sum(area)) |> # Calculate what percentage of total developable area is SFD.
  filter(sfd == "t") |> 
  ungroup() |> 
  add_row(jurisdiction = "York", sfd = "f", area = 0, percent = 0)

hr_sfd_arrange <- hr_sfd |> 
  arrange(jurisdiction)

sfd_bipoc <- cbind(hr_bipoc, hr_sfd_arrange) |> 
  mutate(sfd = percent) |> 
  select(jurisdiction, bipoc, sfd)|> 
  pivot_longer(4:5,
               names_to = "metric",
               values_to = "pct") |> 
  mutate(metric = case_when(
    metric == "bipoc" ~ "BIPOC population (% of total)",
    metric == "sfd" ~ "Single-family detached only (% of total developable)"
  ))
  

ggplot(sfd_bipoc,
       aes(x = fct_reorder2(jurisdiction, metric, pct),
           y = pct,
           fill = metric)) +
  geom_col() +
  coord_flip() +
  theme_hfv() +
  scale_y_continuous(labels = percent_format(), expand = expansion(mult = c(0, 0.05))) +
  theme(legend.position = "top") + 
  scale_fill_hfv()



```


### By-Right Housing

```{r}
#| label: tbl-hr-byright
#| tbl-cap: "Percent of developable land that welcomes housing type by-right"

# Create a table that shows the percentage of land that allows for each type of treatment by locality
# https://frontierinstitute.org/reports/the-montana-zoning-atlas-2-0/ use this as an example 

hr_byright_tbl <- read_rds("data/hr/hr_vza_nogeo.rds") |> 
  select(jurisdiction, abbrvname, overlay, 6:9, area) |> 
  filter(overlay == 0) |> 
  group_by(jurisdiction) |> 
  mutate(total_area = sum(area)) |> 
  mutate(family1_pct = case_when(
    family1_treatment == "allowed" ~ area/total_area,
    TRUE ~ 0
  ))|> 
  mutate(family2_pct = case_when(
    family2_treatment == "allowed" ~ area/total_area,
    TRUE ~ 0 
  )) |> 
  mutate(family3_pct = case_when(
    family3_treatment == "allowed" ~ area/total_area,
    TRUE ~ 0 
  )) |> 
  mutate(family4_pct = case_when(
    family4_treatment == "allowed" ~ area/total_area,
    TRUE ~ 0 
  )) |> 
  group_by(jurisdiction) |> 
  summarise(family1_byright = percent(sum(family1_pct)),
            family2_byright = percent(sum(family2_pct)),
            family3_byright = percent(sum(family3_pct)),
            family4_byright = percent(sum(family4_pct))
            ) 


hr_byright_tbl |>
  kable(col.names = c("Jurisdiction", "Single-family", "2-family", "3-family", "4+-family"), 
        align = "lcccc") |> 
  kable_styling(bootstrap_options = c("striped", "condensed"))

```

```{r}

# Create a bar graph that shows the total amount of zoned land that welcomes 2+ family housing by-right

hr_byright <- read_rds("data/hr/hr_vza_nogeo.rds") |> 
  select(jurisdiction, abbrvname, overlay, 6:9, area) |> # Select data fields.
  filter(overlay == 0) |> # Filter out overlay districts.
  group_by(jurisdiction) |> 
  mutate(total_area = sum(area)) |> # Calculate the total area of zoned land.
  filter(family2_treatment == "allowed" & family3_treatment == "allowed" & family4_treatment == "allowed") |> 
  group_by(jurisdiction) |> 
  mutate(pct_2plus = area/total_area) |> 
  group_by(jurisdiction) |> 
  summarise(pct_2plus = sum(pct_2plus)) |>
  add_row(jurisdiction = "Smithfield", pct_2plus = 0)
  

ggplot(hr_byright,
       aes(x = reorder(jurisdiction, pct_2plus),
           y = pct_2plus,
           fill = pct_2plus)) +
  geom_col() +
  geom_text(aes(label = percent(pct_2plus, accuracy = 1), color = pct_2plus),
    hjust = -0.2) +
  coord_flip() +
  theme_hfv() +
  scale_fill_gradientn(colours = c("#ADDCB1", "#46A88F", "#207A88", "#0F1A4E")) + # Use custom HFV gradient.
  scale_color_gradientn(colours = c("#ADDCB1", "#46A88F", "#207A88", "#0F1A4E")) + # Use custom HFV gradient.
  scale_y_continuous(expand = expansion(mult = c(0, 0.1))) +
  labs(title = "Percent of developable land allowing for 2+ family housing by-right")  +
  theme(axis.text.x = element_blank())


```

### Minimum lot sizes

```{r}

# What is the average minimum lot size for each type of treatment? 
# Blank fields should be treated as NA and should not be included in the mean calculation.


hr_lots <- read_rds("data/hr/hr_vza_nogeo.rds")|> 
  select(jurisdiction, abbrvname, overlay, hr_custom_fields_min1, hr_custom_fields_min2,
         hr_custom_fields_min3, hr_custom_fields_min4) 


```


## Accessory Dwelling Units

```{r}
#| label: fig-hr-adus
#| fig-cap: "Percent of developable land that allows for ADUs by-right"

# Create a table that shows the percentage of land that allows for ADUs by-right
# https://frontierinstitute.org/reports/the-montana-zoning-atlas-2-0/ use this as an example 

hr_adu <- read_rds("data/hr/hr_vza_nogeo.rds") 

```


Many localities across Hampton Roads address ADUs in their zoning ordinances, while a few (Chesapeake and Newport News) make no mention of them at all. 
```{r}
#| label: fig-hr-adu-restrictions
#| fig-cap: "Summary of ADU regulations in Hampton Roads"

# Create a table for the following csv.
# https://frontierinstitute.org/reports/the-montana-zoning-atlas-2-0/ use this as an example 

hr_adu_summary <- read_csv("data/hr/hr_adu_summary.csv")

hr_adu_summary |> 
  kable() |> 
  kable_styling(bootstrap_options = c("striped", "condensed"))



```






